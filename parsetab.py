
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQUALleftGREATERGREATEREQUALLESSLESSEQUALDEQUALNOTEQUALleftPLUSMINUSleftTIMESDIVIDESTART END SETOUT SETIN ARROW GETIN ELSE IF THEN DO PROCESS CALL FLOAT LOOP INT WHILE FOR ID NUMBER NUMBER_FLOAT PLUS PLUSPLUS MINUS MINUSMINUS TIMES OR AND NOTEQUAL DIVIDE LESS LESSEQUAL GREATER GREATEREQUAL EQUAL DEQUAL DISTINT COMMA LPAREN RPAREN LBRACKET RBRACKET COLON QUOTES MAIN ENDLprogram : START program_main ENDprogram_main : program_sequence main_declaration main_declaration : MAIN COLON statements_nont END\n    program_sequence : program_sequence\n                    | statements_nont\n                    | PROCESS_declaration\n    var_declaration : var_type ID COMMA ID\n    | var_type ID EQUAL NUMBER\n    | var_type ID EQUAL NUMBER_FLOAT    \n    | var_type ID EQUAL var\n    | var_type ID EQUAL simple_expression\n    var_type : INTvar_type : FLOAT\n    var_declaration : var_type ID dimensiones \n    \n    dimensiones : dimensiones LBRACKET expression RBRACKET\n                | LBRACKET expression RBRACKET\n    PROCESS_declaration : PROCESS ID DO statements_nont END\n    statements_nont : statements_nont statement\n                    | statement\n    statement : expression_nont\n            | condition_nont\n            | iteration_nont\n            | var_declaration\n            | call\n    expression_nont : expressionexpression_nont : SETOUT LPAREN QUOTES ID QUOTES RPAREN \n    | SETOUT LPAREN QUOTES ID QUOTES COMMA ENDL RPAREN \n    | SETOUT LPAREN var RPAREN\n    | SETOUT LPAREN expression RPAREN\n    | SETOUT LPAREN var COMMA ENDL RPAREN \n    | SETOUT LPAREN var COMMA var RPAREN \n    | SETOUT LPAREN var COMMA var COMMA ENDL RPAREN \n    expression_nont : GETIN LPAREN var RPAREN\n    | GETIN LPAREN var COMMA var RPAREN\n    expression : var PLUSPLUS\n    | var MINUSMINUS\n    condition_nont : IF expression THEN statements_nont ENDcondition_nont : IF expression THEN statements_nont ELSE statements_nont END\n    iteration_nont : FOR expression ARROW expression DO statements_nont LOOP\n    iteration_nont : WHILE expression DO statements_nont LOOPexpression : var EQUAL expressionvar : ID\n    var : var ID LBRACKET expression RBRACKET\n    | ID vardimen\n    \n    vardimen : vardimen LBRACKET expression RBRACKET\n    | LBRACKET expression RBRACKET\n    expression : simple_expressionsimple_expression : additive_expression checkop additive_expressionsimple_expression : additive_expressioncheckop : LESS\n        | LESSEQUAL\n        | GREATER\n        | GREATEREQUAL\n        | DEQUAL\n        | AND\n        | OR\n        | NOTEQUAL\n    \n    additive_expression : additive_expression addop term\n    additive_expression : termaddop : PLUS\n    | MINUS\n    \n    factor : var\n           | NUMBER\n           | NUMBER_FLOAT\n    factor : LPAREN expression RPARENcall : CALL LPAREN ID RPAREN\n    term : term mulop factor\n    term : factormulop :  TIMES\n                | DIVIDE\n    '
    
_lr_action_items = {'START':([0,],[2,]),'$end':([1,33,],[0,-1,]),'PROCESS':([2,],[8,]),'SETOUT':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,42,43,67,68,74,75,78,80,83,86,87,88,89,90,91,93,95,97,99,101,103,104,105,106,107,108,111,114,118,120,121,122,123,125,126,129,130,131,132,133,134,137,138,139,140,],[16,16,-19,-42,-20,-21,-22,-23,-24,-25,-62,-63,-64,-47,-49,-59,-68,-18,-44,-35,-36,16,16,-65,-41,16,16,-14,-48,-62,-58,-67,16,16,-46,-28,-29,-33,16,16,-7,-8,-9,-10,-11,-66,-45,-43,-37,16,16,-40,-16,-26,-31,-30,-34,16,16,-15,-38,-39,-27,-32,]),'GETIN':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,42,43,67,68,74,75,78,80,83,86,87,88,89,90,91,93,95,97,99,101,103,104,105,106,107,108,111,114,118,120,121,122,123,125,126,129,130,131,132,133,134,137,138,139,140,],[19,19,-19,-42,-20,-21,-22,-23,-24,-25,-62,-63,-64,-47,-49,-59,-68,-18,-44,-35,-36,19,19,-65,-41,19,19,-14,-48,-62,-58,-67,19,19,-46,-28,-29,-33,19,19,-7,-8,-9,-10,-11,-66,-45,-43,-37,19,19,-40,-16,-26,-31,-30,-34,19,19,-15,-38,-39,-27,-32,]),'IF':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,42,43,67,68,74,75,78,80,83,86,87,88,89,90,91,93,95,97,99,101,103,104,105,106,107,108,111,114,118,120,121,122,123,125,126,129,130,131,132,133,134,137,138,139,140,],[20,20,-19,-42,-20,-21,-22,-23,-24,-25,-62,-63,-64,-47,-49,-59,-68,-18,-44,-35,-36,20,20,-65,-41,20,20,-14,-48,-62,-58,-67,20,20,-46,-28,-29,-33,20,20,-7,-8,-9,-10,-11,-66,-45,-43,-37,20,20,-40,-16,-26,-31,-30,-34,20,20,-15,-38,-39,-27,-32,]),'FOR':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,42,43,67,68,74,75,78,80,83,86,87,88,89,90,91,93,95,97,99,101,103,104,105,106,107,108,111,114,118,120,121,122,123,125,126,129,130,131,132,133,134,137,138,139,140,],[21,21,-19,-42,-20,-21,-22,-23,-24,-25,-62,-63,-64,-47,-49,-59,-68,-18,-44,-35,-36,21,21,-65,-41,21,21,-14,-48,-62,-58,-67,21,21,-46,-28,-29,-33,21,21,-7,-8,-9,-10,-11,-66,-45,-43,-37,21,21,-40,-16,-26,-31,-30,-34,21,21,-15,-38,-39,-27,-32,]),'WHILE':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,42,43,67,68,74,75,78,80,83,86,87,88,89,90,91,93,95,97,99,101,103,104,105,106,107,108,111,114,118,120,121,122,123,125,126,129,130,131,132,133,134,137,138,139,140,],[22,22,-19,-42,-20,-21,-22,-23,-24,-25,-62,-63,-64,-47,-49,-59,-68,-18,-44,-35,-36,22,22,-65,-41,22,22,-14,-48,-62,-58,-67,22,22,-46,-28,-29,-33,22,22,-7,-8,-9,-10,-11,-66,-45,-43,-37,22,22,-40,-16,-26,-31,-30,-34,22,22,-15,-38,-39,-27,-32,]),'CALL':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,42,43,67,68,74,75,78,80,83,86,87,88,89,90,91,93,95,97,99,101,103,104,105,106,107,108,111,114,118,120,121,122,123,125,126,129,130,131,132,133,134,137,138,139,140,],[27,27,-19,-42,-20,-21,-22,-23,-24,-25,-62,-63,-64,-47,-49,-59,-68,-18,-44,-35,-36,27,27,-65,-41,27,27,-14,-48,-62,-58,-67,27,27,-46,-28,-29,-33,27,27,-7,-8,-9,-10,-11,-66,-45,-43,-37,27,27,-40,-16,-26,-31,-30,-34,27,27,-15,-38,-39,-27,-32,]),'INT':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,42,43,67,68,74,75,78,80,83,86,87,88,89,90,91,93,95,97,99,101,103,104,105,106,107,108,111,114,118,120,121,122,123,125,126,129,130,131,132,133,134,137,138,139,140,],[28,28,-19,-42,-20,-21,-22,-23,-24,-25,-62,-63,-64,-47,-49,-59,-68,-18,-44,-35,-36,28,28,-65,-41,28,28,-14,-48,-62,-58,-67,28,28,-46,-28,-29,-33,28,28,-7,-8,-9,-10,-11,-66,-45,-43,-37,28,28,-40,-16,-26,-31,-30,-34,28,28,-15,-38,-39,-27,-32,]),'FLOAT':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,42,43,67,68,74,75,78,80,83,86,87,88,89,90,91,93,95,97,99,101,103,104,105,106,107,108,111,114,118,120,121,122,123,125,126,129,130,131,132,133,134,137,138,139,140,],[29,29,-19,-42,-20,-21,-22,-23,-24,-25,-62,-63,-64,-47,-49,-59,-68,-18,-44,-35,-36,29,29,-65,-41,29,29,-14,-48,-62,-58,-67,29,29,-46,-28,-29,-33,29,29,-7,-8,-9,-10,-11,-66,-45,-43,-37,29,29,-40,-16,-26,-31,-30,-34,29,29,-15,-38,-39,-27,-32,]),'ID':([2,5,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,28,29,30,31,32,36,38,39,40,42,43,44,46,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,93,95,96,97,99,100,101,103,104,105,106,107,108,109,111,114,116,118,119,120,121,122,123,125,126,129,130,131,132,133,134,137,138,139,140,],[9,9,-19,37,-42,-20,-21,-22,-23,-24,-25,9,45,9,9,9,50,-63,-64,-47,-12,-13,-49,-59,-68,-18,-44,9,9,-35,-36,9,9,85,9,9,-50,-51,-52,-53,-54,-55,-56,-57,-60,-61,9,-69,-70,9,9,9,94,45,-65,-41,9,45,9,9,9,104,9,-14,9,-48,45,-58,-67,9,9,-46,-28,9,-29,-33,9,9,9,-7,-8,-9,-10,-11,9,-66,-45,45,-43,45,-37,9,9,-40,-16,-26,-31,-30,-34,9,9,-15,-38,-39,-27,-32,]),'NUMBER':([2,5,7,9,10,11,12,13,14,15,17,18,20,21,22,24,25,26,30,31,32,36,38,39,40,42,43,44,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,76,78,79,80,82,83,84,86,87,88,89,90,91,93,95,97,99,101,103,104,105,106,107,108,109,111,114,118,120,121,122,123,125,126,129,130,131,132,133,134,137,138,139,140,],[24,24,-19,-42,-20,-21,-22,-23,-24,-25,24,-62,24,24,24,-63,-64,-47,-49,-59,-68,-18,-44,24,24,-35,-36,24,24,24,-50,-51,-52,-53,-54,-55,-56,-57,-60,-61,24,-69,-70,24,24,24,-65,-41,24,24,24,24,105,-14,24,-48,-62,-58,-67,24,24,-46,-28,-29,-33,24,24,-7,-8,-9,-10,-11,24,-66,-45,-43,-37,24,24,-40,-16,-26,-31,-30,-34,24,24,-15,-38,-39,-27,-32,]),'NUMBER_FLOAT':([2,5,7,9,10,11,12,13,14,15,17,18,20,21,22,24,25,26,30,31,32,36,38,39,40,42,43,44,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,76,78,79,80,82,83,84,86,87,88,89,90,91,93,95,97,99,101,103,104,105,106,107,108,109,111,114,118,120,121,122,123,125,126,129,130,131,132,133,134,137,138,139,140,],[25,25,-19,-42,-20,-21,-22,-23,-24,-25,25,-62,25,25,25,-63,-64,-47,-49,-59,-68,-18,-44,25,25,-35,-36,25,25,25,-50,-51,-52,-53,-54,-55,-56,-57,-60,-61,25,-69,-70,25,25,25,-65,-41,25,25,25,25,106,-14,25,-48,-62,-58,-67,25,25,-46,-28,-29,-33,25,25,-7,-8,-9,-10,-11,25,-66,-45,-43,-37,25,25,-40,-16,-26,-31,-30,-34,25,25,-15,-38,-39,-27,-32,]),'LPAREN':([2,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,30,31,32,36,38,39,40,42,43,44,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,76,78,79,80,82,83,84,86,87,88,89,90,91,93,95,97,99,101,103,104,105,106,107,108,109,111,114,118,120,121,122,123,125,126,129,130,131,132,133,134,137,138,139,140,],[17,17,-19,-42,-20,-21,-22,-23,-24,-25,40,17,-62,46,17,17,17,-63,-64,-47,51,-49,-59,-68,-18,-44,17,17,-35,-36,17,17,17,-50,-51,-52,-53,-54,-55,-56,-57,-60,-61,17,-69,-70,17,17,17,-65,-41,17,17,17,17,17,-14,17,-48,-62,-58,-67,17,17,-46,-28,-29,-33,17,17,-7,-8,-9,-10,-11,17,-66,-45,-43,-37,17,17,-40,-16,-26,-31,-30,-34,17,17,-15,-38,-39,-27,-32,]),'END':([3,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,34,36,38,42,43,74,75,83,86,87,88,89,90,91,93,95,97,99,101,104,105,106,107,108,111,112,114,118,120,123,125,126,129,130,131,132,134,137,138,139,140,],[33,-19,-42,-20,-21,-22,-23,-24,-25,-62,-63,-64,-47,-49,-59,-68,-2,-18,-44,-35,-36,-65,-41,-14,-48,-62,-58,-67,112,113,-46,-28,-29,-33,120,-7,-8,-9,-10,-11,-66,-3,-45,-43,-37,-40,-16,-26,-31,-30,-34,137,-15,-38,-39,-27,-32,]),'MAIN':([4,5,6,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,42,43,74,75,83,86,87,88,89,93,95,97,99,104,105,106,107,108,111,113,114,118,120,123,125,126,129,130,131,134,137,138,139,140,],[35,-5,-6,-19,-42,-20,-21,-22,-23,-24,-25,-62,-63,-64,-47,-49,-59,-68,-18,-44,-35,-36,-65,-41,-14,-48,-62,-58,-67,-46,-28,-29,-33,-7,-8,-9,-10,-11,-66,-17,-45,-43,-37,-40,-16,-26,-31,-30,-34,-15,-38,-39,-27,-32,]),'ELSE':([7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,42,43,74,75,83,86,87,88,89,93,95,97,99,101,104,105,106,107,108,111,114,118,120,123,125,126,129,130,131,134,137,138,139,140,],[-19,-42,-20,-21,-22,-23,-24,-25,-62,-63,-64,-47,-49,-59,-68,-18,-44,-35,-36,-65,-41,-14,-48,-62,-58,-67,-46,-28,-29,-33,121,-7,-8,-9,-10,-11,-66,-45,-43,-37,-40,-16,-26,-31,-30,-34,-15,-38,-39,-27,-32,]),'LOOP':([7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,42,43,74,75,83,86,87,88,89,93,95,97,99,103,104,105,106,107,108,111,114,118,120,123,125,126,129,130,131,133,134,137,138,139,140,],[-19,-42,-20,-21,-22,-23,-24,-25,-62,-63,-64,-47,-49,-59,-68,-18,-44,-35,-36,-65,-41,-14,-48,-62,-58,-67,-46,-28,-29,-33,123,-7,-8,-9,-10,-11,-66,-45,-43,-37,-40,-16,-26,-31,-30,-34,138,-15,-38,-39,-27,-32,]),'PLUSPLUS':([9,18,38,72,93,114,118,],[-42,42,-44,42,-46,-45,-43,]),'MINUSMINUS':([9,18,38,72,93,114,118,],[-42,43,-44,43,-46,-45,-43,]),'EQUAL':([9,18,38,50,72,93,114,118,],[-42,44,-44,82,44,-46,-45,-43,]),'TIMES':([9,18,24,25,31,32,38,72,74,87,88,89,93,105,106,107,114,118,],[-42,-62,-63,-64,65,-68,-44,-62,-65,-62,65,-67,-46,-63,-64,-62,-45,-43,]),'DIVIDE':([9,18,24,25,31,32,38,72,74,87,88,89,93,105,106,107,114,118,],[-42,-62,-63,-64,66,-68,-44,-62,-65,-62,66,-67,-46,-63,-64,-62,-45,-43,]),'LESS':([9,18,24,25,30,31,32,38,72,74,87,88,89,93,105,106,107,114,118,],[-42,-62,-63,-64,54,-59,-68,-44,-62,-65,-62,-58,-67,-46,-63,-64,-62,-45,-43,]),'LESSEQUAL':([9,18,24,25,30,31,32,38,72,74,87,88,89,93,105,106,107,114,118,],[-42,-62,-63,-64,55,-59,-68,-44,-62,-65,-62,-58,-67,-46,-63,-64,-62,-45,-43,]),'GREATER':([9,18,24,25,30,31,32,38,72,74,87,88,89,93,105,106,107,114,118,],[-42,-62,-63,-64,56,-59,-68,-44,-62,-65,-62,-58,-67,-46,-63,-64,-62,-45,-43,]),'GREATEREQUAL':([9,18,24,25,30,31,32,38,72,74,87,88,89,93,105,106,107,114,118,],[-42,-62,-63,-64,57,-59,-68,-44,-62,-65,-62,-58,-67,-46,-63,-64,-62,-45,-43,]),'DEQUAL':([9,18,24,25,30,31,32,38,72,74,87,88,89,93,105,106,107,114,118,],[-42,-62,-63,-64,58,-59,-68,-44,-62,-65,-62,-58,-67,-46,-63,-64,-62,-45,-43,]),'AND':([9,18,24,25,30,31,32,38,72,74,87,88,89,93,105,106,107,114,118,],[-42,-62,-63,-64,59,-59,-68,-44,-62,-65,-62,-58,-67,-46,-63,-64,-62,-45,-43,]),'OR':([9,18,24,25,30,31,32,38,72,74,87,88,89,93,105,106,107,114,118,],[-42,-62,-63,-64,60,-59,-68,-44,-62,-65,-62,-58,-67,-46,-63,-64,-62,-45,-43,]),'NOTEQUAL':([9,18,24,25,30,31,32,38,72,74,87,88,89,93,105,106,107,114,118,],[-42,-62,-63,-64,61,-59,-68,-44,-62,-65,-62,-58,-67,-46,-63,-64,-62,-45,-43,]),'PLUS':([9,18,24,25,30,31,32,38,72,74,86,87,88,89,93,105,106,107,114,118,],[-42,-62,-63,-64,62,-59,-68,-44,-62,-65,62,-62,-58,-67,-46,-63,-64,-62,-45,-43,]),'MINUS':([9,18,24,25,30,31,32,38,72,74,86,87,88,89,93,105,106,107,114,118,],[-42,-62,-63,-64,63,-59,-68,-44,-62,-65,63,-62,-58,-67,-46,-63,-64,-62,-45,-43,]),'RPAREN':([9,18,24,25,26,30,31,32,38,41,42,43,72,73,74,75,77,85,86,87,88,89,93,114,115,116,117,118,119,135,136,],[-42,-62,-63,-64,-47,-49,-59,-68,-44,74,-35,-36,95,97,-65,-41,99,111,-48,-62,-58,-67,-46,-45,126,129,130,-43,131,139,140,]),'THEN':([9,18,24,25,26,30,31,32,38,42,43,47,74,75,86,87,88,89,93,114,118,],[-42,-62,-63,-64,-47,-49,-59,-68,-44,-35,-36,78,-65,-41,-48,-62,-58,-67,-46,-45,-43,]),'ARROW':([9,18,24,25,26,30,31,32,38,42,43,48,74,75,86,87,88,89,93,114,118,],[-42,-62,-63,-64,-47,-49,-59,-68,-44,-35,-36,79,-65,-41,-48,-62,-58,-67,-46,-45,-43,]),'DO':([9,18,24,25,26,30,31,32,37,38,42,43,49,74,75,86,87,88,89,93,102,114,118,],[-42,-62,-63,-64,-47,-49,-59,-68,68,-44,-35,-36,80,-65,-41,-48,-62,-58,-67,-46,122,-45,-43,]),'RBRACKET':([9,18,24,25,26,30,31,32,38,42,43,70,74,75,86,87,88,89,92,93,98,110,114,118,124,],[-42,-62,-63,-64,-47,-49,-59,-68,-44,-35,-36,93,-65,-41,-48,-62,-58,-67,114,-46,118,125,-45,-43,134,]),'COMMA':([9,38,50,72,77,93,114,115,116,118,],[-42,-44,81,96,100,-46,-45,127,128,-43,]),'LBRACKET':([9,38,45,50,83,93,114,125,134,],[39,69,76,84,109,-46,-45,-16,-15,]),'COLON':([35,],[67,]),'QUOTES':([40,94,],[71,115,]),'ENDL':([96,127,128,],[117,135,136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_main':([2,],[3,]),'program_sequence':([2,],[4,]),'statements_nont':([2,67,68,78,80,121,122,],[5,90,91,101,103,132,133,]),'PROCESS_declaration':([2,],[6,]),'statement':([2,5,67,68,78,80,90,91,101,103,121,122,132,133,],[7,36,7,7,7,7,36,36,36,36,7,7,36,36,]),'expression_nont':([2,5,67,68,78,80,90,91,101,103,121,122,132,133,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'condition_nont':([2,5,67,68,78,80,90,91,101,103,121,122,132,133,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'iteration_nont':([2,5,67,68,78,80,90,91,101,103,121,122,132,133,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'var_declaration':([2,5,67,68,78,80,90,91,101,103,121,122,132,133,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'call':([2,5,67,68,78,80,90,91,101,103,121,122,132,133,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'expression':([2,5,17,20,21,22,39,40,44,67,68,69,76,78,79,80,84,90,91,101,103,109,121,122,132,133,],[15,15,41,47,48,49,70,73,75,15,15,92,98,15,102,15,110,15,15,15,15,124,15,15,15,15,]),'var':([2,5,17,20,21,22,39,40,44,46,52,53,64,67,68,69,76,78,79,80,82,84,90,91,96,100,101,103,109,121,122,132,133,],[18,18,18,18,18,18,18,72,18,77,87,87,87,18,18,18,18,18,18,18,107,18,18,18,116,119,18,18,18,18,18,18,18,]),'var_type':([2,5,67,68,78,80,90,91,101,103,121,122,132,133,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'simple_expression':([2,5,17,20,21,22,39,40,44,67,68,69,76,78,79,80,82,84,90,91,101,103,109,121,122,132,133,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,108,26,26,26,26,26,26,26,26,26,26,]),'additive_expression':([2,5,17,20,21,22,39,40,44,52,67,68,69,76,78,79,80,82,84,90,91,101,103,109,121,122,132,133,],[30,30,30,30,30,30,30,30,30,86,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'term':([2,5,17,20,21,22,39,40,44,52,53,67,68,69,76,78,79,80,82,84,90,91,101,103,109,121,122,132,133,],[31,31,31,31,31,31,31,31,31,31,88,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'factor':([2,5,17,20,21,22,39,40,44,52,53,64,67,68,69,76,78,79,80,82,84,90,91,101,103,109,121,122,132,133,],[32,32,32,32,32,32,32,32,32,32,32,89,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'main_declaration':([4,],[34,]),'vardimen':([9,],[38,]),'checkop':([30,],[52,]),'addop':([30,86,],[53,53,]),'mulop':([31,88,],[64,64,]),'dimensiones':([50,],[83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> START program_main END','program',3,'p_program','tinybit_yacc.py',33),
  ('program_main -> program_sequence main_declaration','program_main',2,'p_force_main','tinybit_yacc.py',37),
  ('main_declaration -> MAIN COLON statements_nont END','main_declaration',4,'p_main_declaration','tinybit_yacc.py',46),
  ('program_sequence -> program_sequence','program_sequence',1,'p_program_begin','tinybit_yacc.py',51),
  ('program_sequence -> statements_nont','program_sequence',1,'p_program_begin','tinybit_yacc.py',52),
  ('program_sequence -> PROCESS_declaration','program_sequence',1,'p_program_begin','tinybit_yacc.py',53),
  ('var_declaration -> var_type ID COMMA ID','var_declaration',4,'p_var_declaration','tinybit_yacc.py',59),
  ('var_declaration -> var_type ID EQUAL NUMBER','var_declaration',4,'p_var_declaration','tinybit_yacc.py',60),
  ('var_declaration -> var_type ID EQUAL NUMBER_FLOAT','var_declaration',4,'p_var_declaration','tinybit_yacc.py',61),
  ('var_declaration -> var_type ID EQUAL var','var_declaration',4,'p_var_declaration','tinybit_yacc.py',62),
  ('var_declaration -> var_type ID EQUAL simple_expression','var_declaration',4,'p_var_declaration','tinybit_yacc.py',63),
  ('var_type -> INT','var_type',1,'p_var_type_INT','tinybit_yacc.py',79),
  ('var_type -> FLOAT','var_type',1,'p_var_type_FLOAT','tinybit_yacc.py',85),
  ('var_declaration -> var_type ID dimensiones','var_declaration',3,'p_var_declaration_array','tinybit_yacc.py',92),
  ('dimensiones -> dimensiones LBRACKET expression RBRACKET','dimensiones',4,'p_var_dimensiones_array','tinybit_yacc.py',101),
  ('dimensiones -> LBRACKET expression RBRACKET','dimensiones',3,'p_var_dimensiones_array','tinybit_yacc.py',102),
  ('PROCESS_declaration -> PROCESS ID DO statements_nont END','PROCESS_declaration',5,'p_PROCESS_declaration','tinybit_yacc.py',108),
  ('statements_nont -> statements_nont statement','statements_nont',2,'p_statements_nont','tinybit_yacc.py',114),
  ('statements_nont -> statement','statements_nont',1,'p_statements_nont','tinybit_yacc.py',115),
  ('statement -> expression_nont','statement',1,'p_statement','tinybit_yacc.py',120),
  ('statement -> condition_nont','statement',1,'p_statement','tinybit_yacc.py',121),
  ('statement -> iteration_nont','statement',1,'p_statement','tinybit_yacc.py',122),
  ('statement -> var_declaration','statement',1,'p_statement','tinybit_yacc.py',123),
  ('statement -> call','statement',1,'p_statement','tinybit_yacc.py',124),
  ('expression_nont -> expression','expression_nont',1,'p_expression_simple','tinybit_yacc.py',130),
  ('expression_nont -> SETOUT LPAREN QUOTES ID QUOTES RPAREN','expression_nont',6,'p_expression_SETOUT','tinybit_yacc.py',134),
  ('expression_nont -> SETOUT LPAREN QUOTES ID QUOTES COMMA ENDL RPAREN','expression_nont',8,'p_expression_SETOUT','tinybit_yacc.py',135),
  ('expression_nont -> SETOUT LPAREN var RPAREN','expression_nont',4,'p_expression_SETOUT','tinybit_yacc.py',136),
  ('expression_nont -> SETOUT LPAREN expression RPAREN','expression_nont',4,'p_expression_SETOUT','tinybit_yacc.py',137),
  ('expression_nont -> SETOUT LPAREN var COMMA ENDL RPAREN','expression_nont',6,'p_expression_SETOUT','tinybit_yacc.py',138),
  ('expression_nont -> SETOUT LPAREN var COMMA var RPAREN','expression_nont',6,'p_expression_SETOUT','tinybit_yacc.py',139),
  ('expression_nont -> SETOUT LPAREN var COMMA var COMMA ENDL RPAREN','expression_nont',8,'p_expression_SETOUT','tinybit_yacc.py',140),
  ('expression_nont -> GETIN LPAREN var RPAREN','expression_nont',4,'p_expression_GETIN','tinybit_yacc.py',146),
  ('expression_nont -> GETIN LPAREN var COMMA var RPAREN','expression_nont',6,'p_expression_GETIN','tinybit_yacc.py',147),
  ('expression -> var PLUSPLUS','expression',2,'p_expression_overload','tinybit_yacc.py',153),
  ('expression -> var MINUSMINUS','expression',2,'p_expression_overload','tinybit_yacc.py',154),
  ('condition_nont -> IF expression THEN statements_nont END','condition_nont',5,'p_condition_if','tinybit_yacc.py',162),
  ('condition_nont -> IF expression THEN statements_nont ELSE statements_nont END','condition_nont',7,'p_condition_if_else','tinybit_yacc.py',168),
  ('iteration_nont -> FOR expression ARROW expression DO statements_nont LOOP','iteration_nont',7,'p_iteration_for','tinybit_yacc.py',173),
  ('iteration_nont -> WHILE expression DO statements_nont LOOP','iteration_nont',5,'p_iteration_while','tinybit_yacc.py',178),
  ('expression -> var EQUAL expression','expression',3,'p_expression_equal','tinybit_yacc.py',183),
  ('var -> ID','var',1,'p_var_ID','tinybit_yacc.py',188),
  ('var -> var ID LBRACKET expression RBRACKET','var',5,'p_var_bracket','tinybit_yacc.py',206),
  ('var -> ID vardimen','var',2,'p_var_bracket','tinybit_yacc.py',207),
  ('vardimen -> vardimen LBRACKET expression RBRACKET','vardimen',4,'p_var_dimen','tinybit_yacc.py',213),
  ('vardimen -> LBRACKET expression RBRACKET','vardimen',3,'p_var_dimen','tinybit_yacc.py',214),
  ('expression -> simple_expression','expression',1,'p_expression_2','tinybit_yacc.py',220),
  ('simple_expression -> additive_expression checkop additive_expression','simple_expression',3,'p_simple_expression_1','tinybit_yacc.py',225),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression_2','tinybit_yacc.py',244),
  ('checkop -> LESS','checkop',1,'p_checkop','tinybit_yacc.py',249),
  ('checkop -> LESSEQUAL','checkop',1,'p_checkop','tinybit_yacc.py',250),
  ('checkop -> GREATER','checkop',1,'p_checkop','tinybit_yacc.py',251),
  ('checkop -> GREATEREQUAL','checkop',1,'p_checkop','tinybit_yacc.py',252),
  ('checkop -> DEQUAL','checkop',1,'p_checkop','tinybit_yacc.py',253),
  ('checkop -> AND','checkop',1,'p_checkop','tinybit_yacc.py',254),
  ('checkop -> OR','checkop',1,'p_checkop','tinybit_yacc.py',255),
  ('checkop -> NOTEQUAL','checkop',1,'p_checkop','tinybit_yacc.py',256),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression_1','tinybit_yacc.py',263),
  ('additive_expression -> term','additive_expression',1,'p_additive_justerm','tinybit_yacc.py',276),
  ('addop -> PLUS','addop',1,'p_addop','tinybit_yacc.py',280),
  ('addop -> MINUS','addop',1,'p_addop','tinybit_yacc.py',281),
  ('factor -> var','factor',1,'p_factor','tinybit_yacc.py',287),
  ('factor -> NUMBER','factor',1,'p_factor','tinybit_yacc.py',288),
  ('factor -> NUMBER_FLOAT','factor',1,'p_factor','tinybit_yacc.py',289),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_1','tinybit_yacc.py',294),
  ('call -> CALL LPAREN ID RPAREN','call',4,'p_call','tinybit_yacc.py',298),
  ('term -> term mulop factor','term',3,'p_term_mulop','tinybit_yacc.py',304),
  ('term -> factor','term',1,'p_term_mulop1','tinybit_yacc.py',317),
  ('mulop -> TIMES','mulop',1,'p_mulop','tinybit_yacc.py',321),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','tinybit_yacc.py',322),
]
