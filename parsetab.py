
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDESTART END SETOUT ARROW GETIN ELSE IF THEN DO PROCESS CALL FLOAT LOOP INT WHILE FOR ID NUMBER NUMBER_FLOAT PLUS PLUSPLUS MINUS MINUSMINUS TIMES DIVIDE LESS LESSEQUAL GREATER GREATEREQUAL EQUAL DEQUAL DISTINT COMMA LPAREN RPAREN LBRACKET RBRACKET COLON QUOTES MAIN ENDLprogram : START program_main ENDprogram_main : program_sequence main_declaration main_declaration : MAIN COLON statements_nont END\n    program_sequence : program_sequence\n                    | statements_nont\n                    | PROCESS_declaration\n    var_declaration : var_type IDvar_declaration : var_type ID COMMA ID\n    | var_type ID EQUAL NUMBER\n    | var_type ID EQUAL NUMBER_FLOAT    \n    | var_type ID EQUAL var\n    | var_type ID EQUAL simple_expression\n    var_type : INTvar_type : FLOAT\n    var_declaration : var_type ID dimensiones \n    \n    dimensiones : dimensiones LBRACKET expression RBRACKET\n                | LBRACKET expression RBRACKET\n    PROCESS_declaration : PROCESS ID DO statements_nont END\n    statements_nont : statements_nont statement\n                    | statement\n    statement : expression_nont\n            | condition_nont\n            | iteration_nont\n            | var_declaration\n            | call\n    expression_nont : expressionexpression_nont : SETOUT LPAREN QUOTES ID QUOTES RPAREN \n    | SETOUT LPAREN QUOTES ID QUOTES COMMA ENDL RPAREN \n    | SETOUT LPAREN var RPAREN\n    | SETOUT LPAREN var COMMA ENDL RPAREN \n    | SETOUT LPAREN var COMMA var COMMA RPAREN \n    | SETOUT LPAREN var COMMA var COMMA ENDL RPAREN \n    expression_nont : GETIN LPAREN var RPAREN\n    | GETIN LPAREN var COMMA var RPAREN\n    expression_nont : var PLUSPLUS\n    | var MINUSMINUS\n    condition_nont : IF expression THEN statements_nont ENDcondition_nont : IF expression THEN statements_nont ELSE statements_nont END\n    iteration_nont : FOR expression ARROW expression DO statements_nont LOOP\n    iteration_nont : WHILE expression DO statements_nont LOOPexpression : var EQUAL expressionvar : ID\n    var : var ID LBRACKET expression RBRACKET\n    | ID vardimen\n    \n    vardimen : vardimen LBRACKET expression RBRACKET\n    | LBRACKET expression RBRACKET\n    expression : simple_expressionsimple_expression : additive_expression checkop additive_expressionsimple_expression : additive_expressioncheckop : LESS\n        | LESSEQUAL\n        | GREATER\n        | GREATEREQUAL\n        | DEQUAL\n        | DISTINT\n    \n    additive_expression : additive_expression addop term\n    additive_expression : termaddop : PLUS\n    | MINUS\n    \n    factor : var\n           | NUMBER\n           | FLOAT\n    factor : LPAREN expression RPARENcall : CALL LPAREN ID RPAREN\n    term : term mulop factor\n    term : factormulop :  TIMES\n                | DIVIDE\n    '
    
_lr_action_items = {'START':([0,],[2,]),'$end':([1,32,],[0,-1,]),'PROCESS':([2,],[8,]),'SETOUT':([2,5,7,9,10,11,12,13,14,15,18,24,25,28,29,30,31,35,37,41,42,43,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[16,16,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-47,-62,-49,-57,-66,-19,-44,-60,-62,-35,-36,-7,16,16,-63,-41,16,16,-15,-48,-60,-56,-65,16,16,-46,-29,-33,16,16,-8,-9,-10,-11,-12,-64,-45,-43,-37,16,16,-40,-17,-27,-30,-34,16,16,-16,-31,-38,-39,-28,-32,]),'GETIN':([2,5,7,9,10,11,12,13,14,15,18,24,25,28,29,30,31,35,37,41,42,43,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[19,19,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-47,-62,-49,-57,-66,-19,-44,-60,-62,-35,-36,-7,19,19,-63,-41,19,19,-15,-48,-60,-56,-65,19,19,-46,-29,-33,19,19,-8,-9,-10,-11,-12,-64,-45,-43,-37,19,19,-40,-17,-27,-30,-34,19,19,-16,-31,-38,-39,-28,-32,]),'IF':([2,5,7,9,10,11,12,13,14,15,18,24,25,28,29,30,31,35,37,41,42,43,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[20,20,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-47,-62,-49,-57,-66,-19,-44,-60,-62,-35,-36,-7,20,20,-63,-41,20,20,-15,-48,-60,-56,-65,20,20,-46,-29,-33,20,20,-8,-9,-10,-11,-12,-64,-45,-43,-37,20,20,-40,-17,-27,-30,-34,20,20,-16,-31,-38,-39,-28,-32,]),'FOR':([2,5,7,9,10,11,12,13,14,15,18,24,25,28,29,30,31,35,37,41,42,43,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[21,21,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-47,-62,-49,-57,-66,-19,-44,-60,-62,-35,-36,-7,21,21,-63,-41,21,21,-15,-48,-60,-56,-65,21,21,-46,-29,-33,21,21,-8,-9,-10,-11,-12,-64,-45,-43,-37,21,21,-40,-17,-27,-30,-34,21,21,-16,-31,-38,-39,-28,-32,]),'WHILE':([2,5,7,9,10,11,12,13,14,15,18,24,25,28,29,30,31,35,37,41,42,43,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[22,22,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-47,-62,-49,-57,-66,-19,-44,-60,-62,-35,-36,-7,22,22,-63,-41,22,22,-15,-48,-60,-56,-65,22,22,-46,-29,-33,22,22,-8,-9,-10,-11,-12,-64,-45,-43,-37,22,22,-40,-17,-27,-30,-34,22,22,-16,-31,-38,-39,-28,-32,]),'CALL':([2,5,7,9,10,11,12,13,14,15,18,24,25,28,29,30,31,35,37,41,42,43,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[26,26,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-47,-62,-49,-57,-66,-19,-44,-60,-62,-35,-36,-7,26,26,-63,-41,26,26,-15,-48,-60,-56,-65,26,26,-46,-29,-33,26,26,-8,-9,-10,-11,-12,-64,-45,-43,-37,26,26,-40,-17,-27,-30,-34,26,26,-16,-31,-38,-39,-28,-32,]),'ID':([2,5,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,27,28,29,30,31,35,37,38,39,41,42,43,44,45,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,91,93,94,96,97,98,100,101,102,103,104,105,106,108,111,113,115,116,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[9,9,-20,36,-42,-21,-22,-23,-24,-25,-26,9,46,9,9,9,51,-61,-47,-13,-14,-49,-57,-66,-19,-44,9,9,46,-62,-35,-36,9,9,-7,83,9,9,-50,-51,-52,-53,-54,-55,-58,-59,9,-67,-68,9,9,9,92,46,-63,-41,9,46,9,9,9,101,9,-15,9,-48,46,-56,-65,9,9,-46,-29,9,-33,9,9,9,-8,-9,-10,46,-12,9,-64,-45,46,-43,46,-37,9,9,-40,-17,-27,-30,-34,9,9,-16,-31,-38,-39,-28,-32,]),'INT':([2,5,7,9,10,11,12,13,14,15,18,24,25,28,29,30,31,35,37,41,42,43,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[27,27,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-47,-62,-49,-57,-66,-19,-44,-60,-62,-35,-36,-7,27,27,-63,-41,27,27,-15,-48,-60,-56,-65,27,27,-46,-29,-33,27,27,-8,-9,-10,-11,-12,-64,-45,-43,-37,27,27,-40,-17,-27,-30,-34,27,27,-16,-31,-38,-39,-28,-32,]),'FLOAT':([2,5,7,9,10,11,12,13,14,15,17,18,20,21,22,24,25,28,29,30,31,35,37,38,41,42,43,44,45,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,76,77,78,80,81,82,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,106,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[28,28,-20,-42,-21,-22,-23,-24,-25,-26,42,-60,42,42,42,-61,-47,-62,-49,-57,-66,-19,-44,42,-60,-62,-35,-36,42,-7,42,42,-50,-51,-52,-53,-54,-55,-58,-59,42,-67,-68,28,28,42,-63,-41,42,28,42,28,42,-15,42,-48,-60,-56,-65,28,28,-46,-29,-33,28,28,-8,-9,-10,-11,-12,42,-64,-45,-43,-37,28,28,-40,-17,-27,-30,-34,28,28,-16,-31,-38,-39,-28,-32,]),'NUMBER':([2,5,7,9,10,11,12,13,14,15,17,18,20,21,22,24,25,28,29,30,31,35,37,38,41,42,43,44,45,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,76,77,78,80,81,82,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,106,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[24,24,-20,-42,-21,-22,-23,-24,-25,-26,24,-60,24,24,24,-61,-47,-62,-49,-57,-66,-19,-44,24,-60,-62,-35,-36,24,-7,24,24,-50,-51,-52,-53,-54,-55,-58,-59,24,-67,-68,24,24,24,-63,-41,24,24,24,24,102,-15,24,-48,-60,-56,-65,24,24,-46,-29,-33,24,24,-8,-9,-10,-11,-12,24,-64,-45,-43,-37,24,24,-40,-17,-27,-30,-34,24,24,-16,-31,-38,-39,-28,-32,]),'LPAREN':([2,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,28,29,30,31,35,37,38,41,42,43,44,45,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,76,77,78,80,81,82,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,106,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[17,17,-20,-42,-21,-22,-23,-24,-25,-26,39,17,-60,47,17,17,17,-61,-47,52,-62,-49,-57,-66,-19,-44,17,-60,-62,-35,-36,17,-7,17,17,-50,-51,-52,-53,-54,-55,-58,-59,17,-67,-68,17,17,17,-63,-41,17,17,17,17,17,-15,17,-48,-60,-56,-65,17,17,-46,-29,-33,17,17,-8,-9,-10,-11,-12,17,-64,-45,-43,-37,17,17,-40,-17,-27,-30,-34,17,17,-16,-31,-38,-39,-28,-32,]),'END':([3,7,9,10,11,12,13,14,15,18,24,25,28,29,30,31,33,35,37,41,42,43,44,51,72,73,81,84,85,86,87,88,89,91,93,96,98,101,102,103,104,105,108,109,111,115,117,120,122,123,126,127,128,130,132,134,135,136,137,],[32,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-47,-62,-49,-57,-66,-2,-19,-44,-60,-62,-35,-36,-7,-63,-41,-15,-48,-60,-56,-65,109,110,-46,-29,-33,117,-8,-9,-10,-11,-12,-64,-3,-45,-43,-37,-40,-17,-27,-30,-34,134,-16,-31,-38,-39,-28,-32,]),'MAIN':([4,5,6,7,9,10,11,12,13,14,15,18,24,25,28,29,30,31,35,37,41,42,43,44,51,72,73,81,84,85,86,87,91,93,96,101,102,103,104,105,108,110,111,115,117,120,122,123,126,127,130,132,134,135,136,137,],[34,-5,-6,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-47,-62,-49,-57,-66,-19,-44,-60,-62,-35,-36,-7,-63,-41,-15,-48,-60,-56,-65,-46,-29,-33,-8,-9,-10,-11,-12,-64,-18,-45,-43,-37,-40,-17,-27,-30,-34,-16,-31,-38,-39,-28,-32,]),'ELSE':([7,9,10,11,12,13,14,15,18,24,25,28,29,30,31,35,37,41,42,43,44,51,72,73,81,84,85,86,87,91,93,96,98,101,102,103,104,105,108,111,115,117,120,122,123,126,127,130,132,134,135,136,137,],[-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-47,-62,-49,-57,-66,-19,-44,-60,-62,-35,-36,-7,-63,-41,-15,-48,-60,-56,-65,-46,-29,-33,118,-8,-9,-10,-11,-12,-64,-45,-43,-37,-40,-17,-27,-30,-34,-16,-31,-38,-39,-28,-32,]),'LOOP':([7,9,10,11,12,13,14,15,18,24,25,28,29,30,31,35,37,41,42,43,44,51,72,73,81,84,85,86,87,91,93,96,100,101,102,103,104,105,108,111,115,117,120,122,123,126,127,129,130,132,134,135,136,137,],[-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-47,-62,-49,-57,-66,-19,-44,-60,-62,-35,-36,-7,-63,-41,-15,-48,-60,-56,-65,-46,-29,-33,120,-8,-9,-10,-11,-12,-64,-45,-43,-37,-40,-17,-27,-30,-34,135,-16,-31,-38,-39,-28,-32,]),'PLUSPLUS':([9,18,37,91,111,115,],[-42,43,-44,-46,-45,-43,]),'MINUSMINUS':([9,18,37,91,111,115,],[-42,44,-44,-46,-45,-43,]),'EQUAL':([9,18,37,41,51,91,111,115,],[-42,45,-44,45,80,-46,-45,-43,]),'TIMES':([9,18,24,28,30,31,37,41,42,72,85,86,87,91,102,104,111,115,],[-42,-60,-61,-62,64,-66,-44,-60,-62,-63,-60,64,-65,-46,-61,-60,-45,-43,]),'DIVIDE':([9,18,24,28,30,31,37,41,42,72,85,86,87,91,102,104,111,115,],[-42,-60,-61,-62,65,-66,-44,-60,-62,-63,-60,65,-65,-46,-61,-60,-45,-43,]),'LESS':([9,18,24,28,29,30,31,37,41,42,72,85,86,87,91,102,104,111,115,],[-42,-60,-61,-62,55,-57,-66,-44,-60,-62,-63,-60,-56,-65,-46,-61,-60,-45,-43,]),'LESSEQUAL':([9,18,24,28,29,30,31,37,41,42,72,85,86,87,91,102,104,111,115,],[-42,-60,-61,-62,56,-57,-66,-44,-60,-62,-63,-60,-56,-65,-46,-61,-60,-45,-43,]),'GREATER':([9,18,24,28,29,30,31,37,41,42,72,85,86,87,91,102,104,111,115,],[-42,-60,-61,-62,57,-57,-66,-44,-60,-62,-63,-60,-56,-65,-46,-61,-60,-45,-43,]),'GREATEREQUAL':([9,18,24,28,29,30,31,37,41,42,72,85,86,87,91,102,104,111,115,],[-42,-60,-61,-62,58,-57,-66,-44,-60,-62,-63,-60,-56,-65,-46,-61,-60,-45,-43,]),'DEQUAL':([9,18,24,28,29,30,31,37,41,42,72,85,86,87,91,102,104,111,115,],[-42,-60,-61,-62,59,-57,-66,-44,-60,-62,-63,-60,-56,-65,-46,-61,-60,-45,-43,]),'DISTINT':([9,18,24,28,29,30,31,37,41,42,72,85,86,87,91,102,104,111,115,],[-42,-60,-61,-62,60,-57,-66,-44,-60,-62,-63,-60,-56,-65,-46,-61,-60,-45,-43,]),'PLUS':([9,18,24,28,29,30,31,37,41,42,72,84,85,86,87,91,102,104,111,115,],[-42,-60,-61,-62,61,-57,-66,-44,-60,-62,-63,61,-60,-56,-65,-46,-61,-60,-45,-43,]),'MINUS':([9,18,24,28,29,30,31,37,41,42,72,84,85,86,87,91,102,104,111,115,],[-42,-60,-61,-62,62,-57,-66,-44,-60,-62,-63,62,-60,-56,-65,-46,-61,-60,-45,-43,]),'RPAREN':([9,24,25,29,30,31,37,40,41,42,71,72,73,75,83,84,85,86,87,91,111,112,114,115,116,125,131,133,],[-42,-61,-47,-49,-57,-66,-44,72,-60,-62,93,-63,-41,96,108,-48,-60,-56,-65,-46,-45,123,126,-43,127,132,136,137,]),'THEN':([9,24,25,29,30,31,37,41,42,48,72,73,84,85,86,87,91,111,115,],[-42,-61,-47,-49,-57,-66,-44,-60,-62,76,-63,-41,-48,-60,-56,-65,-46,-45,-43,]),'ARROW':([9,24,25,29,30,31,37,41,42,49,72,73,84,85,86,87,91,111,115,],[-42,-61,-47,-49,-57,-66,-44,-60,-62,77,-63,-41,-48,-60,-56,-65,-46,-45,-43,]),'DO':([9,24,25,29,30,31,36,37,41,42,50,72,73,84,85,86,87,91,99,111,115,],[-42,-61,-47,-49,-57,-66,67,-44,-60,-62,78,-63,-41,-48,-60,-56,-65,-46,119,-45,-43,]),'RBRACKET':([9,24,25,29,30,31,37,41,42,69,72,73,84,85,86,87,90,91,95,107,111,115,121,],[-42,-61,-47,-49,-57,-66,-44,-60,-62,91,-63,-41,-48,-60,-56,-65,111,-46,115,122,-45,-43,130,]),'COMMA':([9,37,51,71,75,91,111,112,113,115,],[-42,-44,79,94,97,-46,-45,124,125,-43,]),'LBRACKET':([9,37,46,51,81,91,111,122,130,],[38,68,74,82,106,-46,-45,-17,-16,]),'COLON':([34,],[66,]),'QUOTES':([39,92,],[70,112,]),'NUMBER_FLOAT':([80,],[103,]),'ENDL':([94,124,125,],[114,131,133,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_main':([2,],[3,]),'program_sequence':([2,],[4,]),'statements_nont':([2,66,67,76,78,118,119,],[5,88,89,98,100,128,129,]),'PROCESS_declaration':([2,],[6,]),'statement':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[7,35,7,7,7,7,35,35,35,35,7,7,35,35,]),'expression_nont':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'condition_nont':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'iteration_nont':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'var_declaration':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'call':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'expression':([2,5,17,20,21,22,38,45,66,67,68,74,76,77,78,82,88,89,98,100,106,118,119,128,129,],[15,15,40,48,49,50,69,73,15,15,90,95,15,99,15,107,15,15,15,15,121,15,15,15,15,]),'var':([2,5,17,20,21,22,38,39,45,47,53,54,63,66,67,68,74,76,77,78,80,82,88,89,94,97,98,100,106,118,119,128,129,],[18,18,41,41,41,41,41,71,41,75,85,85,85,18,18,41,41,18,41,18,104,41,18,18,113,116,18,18,41,18,18,18,18,]),'var_type':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'simple_expression':([2,5,17,20,21,22,38,45,66,67,68,74,76,77,78,80,82,88,89,98,100,106,118,119,128,129,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,105,25,25,25,25,25,25,25,25,25,25,]),'additive_expression':([2,5,17,20,21,22,38,45,53,66,67,68,74,76,77,78,80,82,88,89,98,100,106,118,119,128,129,],[29,29,29,29,29,29,29,29,84,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'term':([2,5,17,20,21,22,38,45,53,54,66,67,68,74,76,77,78,80,82,88,89,98,100,106,118,119,128,129,],[30,30,30,30,30,30,30,30,30,86,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'factor':([2,5,17,20,21,22,38,45,53,54,63,66,67,68,74,76,77,78,80,82,88,89,98,100,106,118,119,128,129,],[31,31,31,31,31,31,31,31,31,31,87,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'main_declaration':([4,],[33,]),'vardimen':([9,],[37,]),'checkop':([29,],[53,]),'addop':([29,84,],[54,54,]),'mulop':([30,86,],[63,63,]),'dimensiones':([51,],[81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> START program_main END','program',3,'p_program','tinybit_yacc.py',30),
  ('program_main -> program_sequence main_declaration','program_main',2,'p_force_main','tinybit_yacc.py',34),
  ('main_declaration -> MAIN COLON statements_nont END','main_declaration',4,'p_main_declaration','tinybit_yacc.py',43),
  ('program_sequence -> program_sequence','program_sequence',1,'p_program_begin','tinybit_yacc.py',48),
  ('program_sequence -> statements_nont','program_sequence',1,'p_program_begin','tinybit_yacc.py',49),
  ('program_sequence -> PROCESS_declaration','program_sequence',1,'p_program_begin','tinybit_yacc.py',50),
  ('var_declaration -> var_type ID','var_declaration',2,'p_var_declare_novalue','tinybit_yacc.py',56),
  ('var_declaration -> var_type ID COMMA ID','var_declaration',4,'p_var_declaration','tinybit_yacc.py',59),
  ('var_declaration -> var_type ID EQUAL NUMBER','var_declaration',4,'p_var_declaration','tinybit_yacc.py',60),
  ('var_declaration -> var_type ID EQUAL NUMBER_FLOAT','var_declaration',4,'p_var_declaration','tinybit_yacc.py',61),
  ('var_declaration -> var_type ID EQUAL var','var_declaration',4,'p_var_declaration','tinybit_yacc.py',62),
  ('var_declaration -> var_type ID EQUAL simple_expression','var_declaration',4,'p_var_declaration','tinybit_yacc.py',63),
  ('var_type -> INT','var_type',1,'p_var_type_INT','tinybit_yacc.py',76),
  ('var_type -> FLOAT','var_type',1,'p_var_type_FLOAT','tinybit_yacc.py',82),
  ('var_declaration -> var_type ID dimensiones','var_declaration',3,'p_var_declaration_array','tinybit_yacc.py',89),
  ('dimensiones -> dimensiones LBRACKET expression RBRACKET','dimensiones',4,'p_var_dimensiones_array','tinybit_yacc.py',98),
  ('dimensiones -> LBRACKET expression RBRACKET','dimensiones',3,'p_var_dimensiones_array','tinybit_yacc.py',99),
  ('PROCESS_declaration -> PROCESS ID DO statements_nont END','PROCESS_declaration',5,'p_PROCESS_declaration','tinybit_yacc.py',105),
  ('statements_nont -> statements_nont statement','statements_nont',2,'p_statements_nont','tinybit_yacc.py',111),
  ('statements_nont -> statement','statements_nont',1,'p_statements_nont','tinybit_yacc.py',112),
  ('statement -> expression_nont','statement',1,'p_statement','tinybit_yacc.py',117),
  ('statement -> condition_nont','statement',1,'p_statement','tinybit_yacc.py',118),
  ('statement -> iteration_nont','statement',1,'p_statement','tinybit_yacc.py',119),
  ('statement -> var_declaration','statement',1,'p_statement','tinybit_yacc.py',120),
  ('statement -> call','statement',1,'p_statement','tinybit_yacc.py',121),
  ('expression_nont -> expression','expression_nont',1,'p_expression_simple','tinybit_yacc.py',127),
  ('expression_nont -> SETOUT LPAREN QUOTES ID QUOTES RPAREN','expression_nont',6,'p_expression_SETOUT','tinybit_yacc.py',132),
  ('expression_nont -> SETOUT LPAREN QUOTES ID QUOTES COMMA ENDL RPAREN','expression_nont',8,'p_expression_SETOUT','tinybit_yacc.py',133),
  ('expression_nont -> SETOUT LPAREN var RPAREN','expression_nont',4,'p_expression_SETOUT','tinybit_yacc.py',134),
  ('expression_nont -> SETOUT LPAREN var COMMA ENDL RPAREN','expression_nont',6,'p_expression_SETOUT','tinybit_yacc.py',135),
  ('expression_nont -> SETOUT LPAREN var COMMA var COMMA RPAREN','expression_nont',7,'p_expression_SETOUT','tinybit_yacc.py',136),
  ('expression_nont -> SETOUT LPAREN var COMMA var COMMA ENDL RPAREN','expression_nont',8,'p_expression_SETOUT','tinybit_yacc.py',137),
  ('expression_nont -> GETIN LPAREN var RPAREN','expression_nont',4,'p_expression_GETIN','tinybit_yacc.py',143),
  ('expression_nont -> GETIN LPAREN var COMMA var RPAREN','expression_nont',6,'p_expression_GETIN','tinybit_yacc.py',144),
  ('expression_nont -> var PLUSPLUS','expression_nont',2,'p_expression_overload','tinybit_yacc.py',150),
  ('expression_nont -> var MINUSMINUS','expression_nont',2,'p_expression_overload','tinybit_yacc.py',151),
  ('condition_nont -> IF expression THEN statements_nont END','condition_nont',5,'p_condition_if','tinybit_yacc.py',175),
  ('condition_nont -> IF expression THEN statements_nont ELSE statements_nont END','condition_nont',7,'p_condition_if_else','tinybit_yacc.py',180),
  ('iteration_nont -> FOR expression ARROW expression DO statements_nont LOOP','iteration_nont',7,'p_iteration_for','tinybit_yacc.py',185),
  ('iteration_nont -> WHILE expression DO statements_nont LOOP','iteration_nont',5,'p_iteration_while','tinybit_yacc.py',190),
  ('expression -> var EQUAL expression','expression',3,'p_expression_equal','tinybit_yacc.py',195),
  ('var -> ID','var',1,'p_var_ID','tinybit_yacc.py',200),
  ('var -> var ID LBRACKET expression RBRACKET','var',5,'p_var_bracket','tinybit_yacc.py',215),
  ('var -> ID vardimen','var',2,'p_var_bracket','tinybit_yacc.py',216),
  ('vardimen -> vardimen LBRACKET expression RBRACKET','vardimen',4,'p_var_dimen','tinybit_yacc.py',222),
  ('vardimen -> LBRACKET expression RBRACKET','vardimen',3,'p_var_dimen','tinybit_yacc.py',223),
  ('expression -> simple_expression','expression',1,'p_expression_2','tinybit_yacc.py',229),
  ('simple_expression -> additive_expression checkop additive_expression','simple_expression',3,'p_simple_expression_1','tinybit_yacc.py',234),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression_2','tinybit_yacc.py',238),
  ('checkop -> LESS','checkop',1,'p_checkop','tinybit_yacc.py',243),
  ('checkop -> LESSEQUAL','checkop',1,'p_checkop','tinybit_yacc.py',244),
  ('checkop -> GREATER','checkop',1,'p_checkop','tinybit_yacc.py',245),
  ('checkop -> GREATEREQUAL','checkop',1,'p_checkop','tinybit_yacc.py',246),
  ('checkop -> DEQUAL','checkop',1,'p_checkop','tinybit_yacc.py',247),
  ('checkop -> DISTINT','checkop',1,'p_checkop','tinybit_yacc.py',248),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression_1','tinybit_yacc.py',255),
  ('additive_expression -> term','additive_expression',1,'p_additive_justerm','tinybit_yacc.py',265),
  ('addop -> PLUS','addop',1,'p_addop','tinybit_yacc.py',269),
  ('addop -> MINUS','addop',1,'p_addop','tinybit_yacc.py',270),
  ('factor -> var','factor',1,'p_factor','tinybit_yacc.py',276),
  ('factor -> NUMBER','factor',1,'p_factor','tinybit_yacc.py',277),
  ('factor -> FLOAT','factor',1,'p_factor','tinybit_yacc.py',278),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_1','tinybit_yacc.py',283),
  ('call -> CALL LPAREN ID RPAREN','call',4,'p_call','tinybit_yacc.py',287),
  ('term -> term mulop factor','term',3,'p_term_mulop','tinybit_yacc.py',293),
  ('term -> factor','term',1,'p_term_mulop1','tinybit_yacc.py',302),
  ('mulop -> TIMES','mulop',1,'p_mulop','tinybit_yacc.py',306),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','tinybit_yacc.py',307),
]
