
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDESTART END SETOUT ARROW GETIN ELSE IF THEN DO PROCESS CALL FLOAT LOOP INT WHILE FOR ID NUMBER NUMBER_FLOAT PLUS PLUSPLUS MINUS MINUSMINUS TIMES DIVIDE LESS LESSEQUAL GREATER GREATEREQUAL EQUAL DEQUAL DISTINT COMMA LPAREN RPAREN LBRACKET RBRACKET COLON QUOTES MAIN ENDLprogram : START program_main ENDprogram_main : program_sequence main_declaration main_declaration : MAIN COLON statements_nont END\n    program_sequence : program_sequence\n                    | statements_nont\n                    | PROCESS_declaration\n    var_declaration : var_type IDvar_declaration : var_type ID COMMA ID\n    | var_type ID EQUAL NUMBER\n    | var_type ID EQUAL NUMBER_FLOAT    \n    | var_type ID EQUAL var\n    | var_type ID EQUAL simple_expression\n    var_type : INTvar_type : FLOAT\n    var_declaration : var_type ID dimensiones \n    \n    dimensiones : dimensiones LBRACKET expression RBRACKET\n                | LBRACKET expression RBRACKET\n    PROCESS_declaration : PROCESS ID DO statements_nont END\n    statements_nont : statements_nont statement\n                    | statement\n    statement : expression_nont\n            | condition_nont\n            | iteration_nont\n            | var_declaration\n            | call\n    expression_nont : expressionexpression_nont : SETOUT LPAREN QUOTES ID QUOTES RPAREN \n    | SETOUT LPAREN QUOTES ID QUOTES COMMA ENDL RPAREN \n    | SETOUT LPAREN var RPAREN\n    | SETOUT LPAREN var COMMA ENDL RPAREN \n    | SETOUT LPAREN var COMMA var COMMA RPAREN \n    | SETOUT LPAREN var COMMA var COMMA ENDL RPAREN \n    expression_nont : GETIN LPAREN var RPAREN\n    | GETIN LPAREN var COMMA var RPAREN\n    expression_nont : ID PLUSPLUS\n    | ID MINUSMINUS\n    condition_nont : IF expression THEN statements_nont ENDcondition_nont : IF expression THEN statements_nont ELSE statements_nont END\n    iteration_nont : FOR expression ARROW expression DO statements_nont LOOP\n    iteration_nont : WHILE expression DO statements_nont LOOPexpression : var EQUAL expressionvar : ID\n    var : var ID LBRACKET expression RBRACKET\n    | ID vardimen\n    \n    vardimen : vardimen LBRACKET expression RBRACKET\n    | LBRACKET expression RBRACKET\n    expression : simple_expressionsimple_expression : additive_expression checkop additive_expressionsimple_expression : additive_expressioncheckop : LESS\n        | LESSEQUAL\n        | GREATER\n        | GREATEREQUAL\n        | DEQUAL\n        | DISTINT\n    \n    additive_expression : additive_expression addop term\n    additive_expression : termaddop : PLUS\n    | MINUS\n    \n    factor : var\n           | NUMBER\n           | NUMBER_FLOAT\n    factor : LPAREN expression RPARENcall : CALL LPAREN ID RPAREN\n    term : term mulop factor\n    term : factormulop :  TIMES\n                | DIVIDE\n    '
    
_lr_action_items = {'START':([0,],[2,]),'$end':([1,33,],[0,-1,]),'PROCESS':([2,],[8,]),'SETOUT':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,39,40,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[16,16,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-62,-47,-49,-57,-66,-19,-35,-36,-44,-42,-7,16,16,-63,-41,16,16,-15,-48,-60,-56,-65,16,16,-46,-29,-33,16,16,-8,-9,-10,-11,-12,-64,-45,-43,-37,16,16,-40,-17,-27,-30,-34,16,16,-16,-31,-38,-39,-28,-32,]),'GETIN':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,39,40,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[19,19,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-62,-47,-49,-57,-66,-19,-35,-36,-44,-42,-7,19,19,-63,-41,19,19,-15,-48,-60,-56,-65,19,19,-46,-29,-33,19,19,-8,-9,-10,-11,-12,-64,-45,-43,-37,19,19,-40,-17,-27,-30,-34,19,19,-16,-31,-38,-39,-28,-32,]),'ID':([2,5,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,28,29,30,31,32,36,38,39,40,41,42,44,45,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,91,93,94,96,97,98,100,101,102,103,104,105,106,108,111,113,115,116,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[9,9,-20,37,-42,-21,-22,-23,-24,-25,-26,44,46,44,44,44,51,-61,-62,-47,-13,-14,-49,-57,-66,-19,-35,-36,-44,44,44,-42,44,44,-7,83,44,44,-50,-51,-52,-53,-54,-55,-58,-59,44,-67,-68,9,9,44,92,46,-63,-41,44,46,9,44,9,101,44,-15,44,-48,46,-56,-65,9,9,-46,-29,44,-33,44,9,9,-8,-9,-10,46,-12,44,-64,-45,46,-43,46,-37,9,9,-40,-17,-27,-30,-34,9,9,-16,-31,-38,-39,-28,-32,]),'IF':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,39,40,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[20,20,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-62,-47,-49,-57,-66,-19,-35,-36,-44,-42,-7,20,20,-63,-41,20,20,-15,-48,-60,-56,-65,20,20,-46,-29,-33,20,20,-8,-9,-10,-11,-12,-64,-45,-43,-37,20,20,-40,-17,-27,-30,-34,20,20,-16,-31,-38,-39,-28,-32,]),'FOR':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,39,40,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[21,21,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-62,-47,-49,-57,-66,-19,-35,-36,-44,-42,-7,21,21,-63,-41,21,21,-15,-48,-60,-56,-65,21,21,-46,-29,-33,21,21,-8,-9,-10,-11,-12,-64,-45,-43,-37,21,21,-40,-17,-27,-30,-34,21,21,-16,-31,-38,-39,-28,-32,]),'WHILE':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,39,40,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[22,22,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-62,-47,-49,-57,-66,-19,-35,-36,-44,-42,-7,22,22,-63,-41,22,22,-15,-48,-60,-56,-65,22,22,-46,-29,-33,22,22,-8,-9,-10,-11,-12,-64,-45,-43,-37,22,22,-40,-17,-27,-30,-34,22,22,-16,-31,-38,-39,-28,-32,]),'CALL':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,39,40,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[27,27,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-62,-47,-49,-57,-66,-19,-35,-36,-44,-42,-7,27,27,-63,-41,27,27,-15,-48,-60,-56,-65,27,27,-46,-29,-33,27,27,-8,-9,-10,-11,-12,-64,-45,-43,-37,27,27,-40,-17,-27,-30,-34,27,27,-16,-31,-38,-39,-28,-32,]),'INT':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,39,40,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[28,28,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-62,-47,-49,-57,-66,-19,-35,-36,-44,-42,-7,28,28,-63,-41,28,28,-15,-48,-60,-56,-65,28,28,-46,-29,-33,28,28,-8,-9,-10,-11,-12,-64,-45,-43,-37,28,28,-40,-17,-27,-30,-34,28,28,-16,-31,-38,-39,-28,-32,]),'FLOAT':([2,5,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,39,40,44,51,66,67,72,73,76,78,81,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[29,29,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-62,-47,-49,-57,-66,-19,-35,-36,-44,-42,-7,29,29,-63,-41,29,29,-15,-48,-60,-56,-65,29,29,-46,-29,-33,29,29,-8,-9,-10,-11,-12,-64,-45,-43,-37,29,29,-40,-17,-27,-30,-34,29,29,-16,-31,-38,-39,-28,-32,]),'NUMBER':([2,5,7,9,10,11,12,13,14,15,17,18,20,21,22,24,25,26,30,31,32,36,38,39,40,41,44,45,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,76,77,78,80,81,82,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,106,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[24,24,-20,-42,-21,-22,-23,-24,-25,-26,24,-60,24,24,24,-61,-62,-47,-49,-57,-66,-19,-35,-36,-44,24,-42,24,-7,24,24,-50,-51,-52,-53,-54,-55,-58,-59,24,-67,-68,24,24,24,-63,-41,24,24,24,24,102,-15,24,-48,-60,-56,-65,24,24,-46,-29,-33,24,24,-8,-9,-10,-11,-12,24,-64,-45,-43,-37,24,24,-40,-17,-27,-30,-34,24,24,-16,-31,-38,-39,-28,-32,]),'NUMBER_FLOAT':([2,5,7,9,10,11,12,13,14,15,17,18,20,21,22,24,25,26,30,31,32,36,38,39,40,41,44,45,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,76,77,78,80,81,82,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,106,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[25,25,-20,-42,-21,-22,-23,-24,-25,-26,25,-60,25,25,25,-61,-62,-47,-49,-57,-66,-19,-35,-36,-44,25,-42,25,-7,25,25,-50,-51,-52,-53,-54,-55,-58,-59,25,-67,-68,25,25,25,-63,-41,25,25,25,25,103,-15,25,-48,-60,-56,-65,25,25,-46,-29,-33,25,25,-8,-9,-10,-11,-12,25,-64,-45,-43,-37,25,25,-40,-17,-27,-30,-34,25,25,-16,-31,-38,-39,-28,-32,]),'LPAREN':([2,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,30,31,32,36,38,39,40,41,44,45,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,72,73,74,76,77,78,80,81,82,84,85,86,87,88,89,91,93,96,98,100,101,102,103,104,105,106,108,111,115,117,118,119,120,122,123,126,127,128,129,130,132,134,135,136,137,],[17,17,-20,-42,-21,-22,-23,-24,-25,-26,42,17,-60,47,17,17,17,-61,-62,-47,52,-49,-57,-66,-19,-35,-36,-44,17,-42,17,-7,17,17,-50,-51,-52,-53,-54,-55,-58,-59,17,-67,-68,17,17,17,-63,-41,17,17,17,17,17,-15,17,-48,-60,-56,-65,17,17,-46,-29,-33,17,17,-8,-9,-10,-11,-12,17,-64,-45,-43,-37,17,17,-40,-17,-27,-30,-34,17,17,-16,-31,-38,-39,-28,-32,]),'END':([3,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,34,36,38,39,40,44,51,72,73,81,84,85,86,87,88,89,91,93,96,98,101,102,103,104,105,108,109,111,115,117,120,122,123,126,127,128,130,132,134,135,136,137,],[33,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-62,-47,-49,-57,-66,-2,-19,-35,-36,-44,-42,-7,-63,-41,-15,-48,-60,-56,-65,109,110,-46,-29,-33,117,-8,-9,-10,-11,-12,-64,-3,-45,-43,-37,-40,-17,-27,-30,-34,134,-16,-31,-38,-39,-28,-32,]),'MAIN':([4,5,6,7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,39,40,44,51,72,73,81,84,85,86,87,91,93,96,101,102,103,104,105,108,110,111,115,117,120,122,123,126,127,130,132,134,135,136,137,],[35,-5,-6,-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-62,-47,-49,-57,-66,-19,-35,-36,-44,-42,-7,-63,-41,-15,-48,-60,-56,-65,-46,-29,-33,-8,-9,-10,-11,-12,-64,-18,-45,-43,-37,-40,-17,-27,-30,-34,-16,-31,-38,-39,-28,-32,]),'ELSE':([7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,39,40,44,51,72,73,81,84,85,86,87,91,93,96,98,101,102,103,104,105,108,111,115,117,120,122,123,126,127,130,132,134,135,136,137,],[-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-62,-47,-49,-57,-66,-19,-35,-36,-44,-42,-7,-63,-41,-15,-48,-60,-56,-65,-46,-29,-33,118,-8,-9,-10,-11,-12,-64,-45,-43,-37,-40,-17,-27,-30,-34,-16,-31,-38,-39,-28,-32,]),'LOOP':([7,9,10,11,12,13,14,15,18,24,25,26,30,31,32,36,38,39,40,44,51,72,73,81,84,85,86,87,91,93,96,100,101,102,103,104,105,108,111,115,117,120,122,123,126,127,129,130,132,134,135,136,137,],[-20,-42,-21,-22,-23,-24,-25,-26,-60,-61,-62,-47,-49,-57,-66,-19,-35,-36,-44,-42,-7,-63,-41,-15,-48,-60,-56,-65,-46,-29,-33,120,-8,-9,-10,-11,-12,-64,-45,-43,-37,-40,-17,-27,-30,-34,135,-16,-31,-38,-39,-28,-32,]),'PLUSPLUS':([9,],[38,]),'MINUSMINUS':([9,],[39,]),'EQUAL':([9,18,40,44,51,91,111,115,],[-42,45,-44,-42,80,-46,-45,-43,]),'TIMES':([9,18,24,25,31,32,40,44,72,85,86,87,91,102,103,104,111,115,],[-42,-60,-61,-62,64,-66,-44,-42,-63,-60,64,-65,-46,-61,-62,-60,-45,-43,]),'DIVIDE':([9,18,24,25,31,32,40,44,72,85,86,87,91,102,103,104,111,115,],[-42,-60,-61,-62,65,-66,-44,-42,-63,-60,65,-65,-46,-61,-62,-60,-45,-43,]),'LESS':([9,18,24,25,30,31,32,40,44,72,85,86,87,91,102,103,104,111,115,],[-42,-60,-61,-62,55,-57,-66,-44,-42,-63,-60,-56,-65,-46,-61,-62,-60,-45,-43,]),'LESSEQUAL':([9,18,24,25,30,31,32,40,44,72,85,86,87,91,102,103,104,111,115,],[-42,-60,-61,-62,56,-57,-66,-44,-42,-63,-60,-56,-65,-46,-61,-62,-60,-45,-43,]),'GREATER':([9,18,24,25,30,31,32,40,44,72,85,86,87,91,102,103,104,111,115,],[-42,-60,-61,-62,57,-57,-66,-44,-42,-63,-60,-56,-65,-46,-61,-62,-60,-45,-43,]),'GREATEREQUAL':([9,18,24,25,30,31,32,40,44,72,85,86,87,91,102,103,104,111,115,],[-42,-60,-61,-62,58,-57,-66,-44,-42,-63,-60,-56,-65,-46,-61,-62,-60,-45,-43,]),'DEQUAL':([9,18,24,25,30,31,32,40,44,72,85,86,87,91,102,103,104,111,115,],[-42,-60,-61,-62,59,-57,-66,-44,-42,-63,-60,-56,-65,-46,-61,-62,-60,-45,-43,]),'DISTINT':([9,18,24,25,30,31,32,40,44,72,85,86,87,91,102,103,104,111,115,],[-42,-60,-61,-62,60,-57,-66,-44,-42,-63,-60,-56,-65,-46,-61,-62,-60,-45,-43,]),'PLUS':([9,18,24,25,30,31,32,40,44,72,84,85,86,87,91,102,103,104,111,115,],[-42,-60,-61,-62,61,-57,-66,-44,-42,-63,61,-60,-56,-65,-46,-61,-62,-60,-45,-43,]),'MINUS':([9,18,24,25,30,31,32,40,44,72,84,85,86,87,91,102,103,104,111,115,],[-42,-60,-61,-62,62,-57,-66,-44,-42,-63,62,-60,-56,-65,-46,-61,-62,-60,-45,-43,]),'LBRACKET':([9,40,44,46,51,81,91,111,122,130,],[41,68,41,74,82,106,-46,-45,-17,-16,]),'RPAREN':([18,24,25,26,30,31,32,40,43,44,71,72,73,75,83,84,85,86,87,91,111,112,114,115,116,125,131,133,],[-60,-61,-62,-47,-49,-57,-66,-44,72,-42,93,-63,-41,96,108,-48,-60,-56,-65,-46,-45,123,126,-43,127,132,136,137,]),'THEN':([18,24,25,26,30,31,32,40,44,48,72,73,84,85,86,87,91,111,115,],[-60,-61,-62,-47,-49,-57,-66,-44,-42,76,-63,-41,-48,-60,-56,-65,-46,-45,-43,]),'ARROW':([18,24,25,26,30,31,32,40,44,49,72,73,84,85,86,87,91,111,115,],[-60,-61,-62,-47,-49,-57,-66,-44,-42,77,-63,-41,-48,-60,-56,-65,-46,-45,-43,]),'DO':([18,24,25,26,30,31,32,37,40,44,50,72,73,84,85,86,87,91,99,111,115,],[-60,-61,-62,-47,-49,-57,-66,67,-44,-42,78,-63,-41,-48,-60,-56,-65,-46,119,-45,-43,]),'RBRACKET':([18,24,25,26,30,31,32,40,44,69,72,73,84,85,86,87,90,91,95,107,111,115,121,],[-60,-61,-62,-47,-49,-57,-66,-44,-42,91,-63,-41,-48,-60,-56,-65,111,-46,115,122,-45,-43,130,]),'COLON':([35,],[66,]),'COMMA':([40,44,51,71,75,91,111,112,113,115,],[-44,-42,79,94,97,-46,-45,124,125,-43,]),'QUOTES':([42,92,],[70,112,]),'ENDL':([94,124,125,],[114,131,133,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_main':([2,],[3,]),'program_sequence':([2,],[4,]),'statements_nont':([2,66,67,76,78,118,119,],[5,88,89,98,100,128,129,]),'PROCESS_declaration':([2,],[6,]),'statement':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[7,36,7,7,7,7,36,36,36,36,7,7,36,36,]),'expression_nont':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'condition_nont':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'iteration_nont':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'var_declaration':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'call':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'expression':([2,5,17,20,21,22,41,45,66,67,68,74,76,77,78,82,88,89,98,100,106,118,119,128,129,],[15,15,43,48,49,50,69,73,15,15,90,95,15,99,15,107,15,15,15,15,121,15,15,15,15,]),'var':([2,5,17,20,21,22,41,42,45,47,53,54,63,66,67,68,74,76,77,78,80,82,88,89,94,97,98,100,106,118,119,128,129,],[18,18,18,18,18,18,18,71,18,75,85,85,85,18,18,18,18,18,18,18,104,18,18,18,113,116,18,18,18,18,18,18,18,]),'var_type':([2,5,66,67,76,78,88,89,98,100,118,119,128,129,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'simple_expression':([2,5,17,20,21,22,41,45,66,67,68,74,76,77,78,80,82,88,89,98,100,106,118,119,128,129,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,105,26,26,26,26,26,26,26,26,26,26,]),'additive_expression':([2,5,17,20,21,22,41,45,53,66,67,68,74,76,77,78,80,82,88,89,98,100,106,118,119,128,129,],[30,30,30,30,30,30,30,30,84,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'term':([2,5,17,20,21,22,41,45,53,54,66,67,68,74,76,77,78,80,82,88,89,98,100,106,118,119,128,129,],[31,31,31,31,31,31,31,31,31,86,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'factor':([2,5,17,20,21,22,41,45,53,54,63,66,67,68,74,76,77,78,80,82,88,89,98,100,106,118,119,128,129,],[32,32,32,32,32,32,32,32,32,32,87,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'main_declaration':([4,],[34,]),'vardimen':([9,44,],[40,40,]),'checkop':([30,],[53,]),'addop':([30,84,],[54,54,]),'mulop':([31,86,],[63,63,]),'dimensiones':([51,],[81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> START program_main END','program',3,'p_program','tinybit_yacc.py',30),
  ('program_main -> program_sequence main_declaration','program_main',2,'p_force_main','tinybit_yacc.py',34),
  ('main_declaration -> MAIN COLON statements_nont END','main_declaration',4,'p_main_declaration','tinybit_yacc.py',41),
  ('program_sequence -> program_sequence','program_sequence',1,'p_program_begin','tinybit_yacc.py',46),
  ('program_sequence -> statements_nont','program_sequence',1,'p_program_begin','tinybit_yacc.py',47),
  ('program_sequence -> PROCESS_declaration','program_sequence',1,'p_program_begin','tinybit_yacc.py',48),
  ('var_declaration -> var_type ID','var_declaration',2,'p_var_declare_novalue','tinybit_yacc.py',54),
  ('var_declaration -> var_type ID COMMA ID','var_declaration',4,'p_var_declaration','tinybit_yacc.py',57),
  ('var_declaration -> var_type ID EQUAL NUMBER','var_declaration',4,'p_var_declaration','tinybit_yacc.py',58),
  ('var_declaration -> var_type ID EQUAL NUMBER_FLOAT','var_declaration',4,'p_var_declaration','tinybit_yacc.py',59),
  ('var_declaration -> var_type ID EQUAL var','var_declaration',4,'p_var_declaration','tinybit_yacc.py',60),
  ('var_declaration -> var_type ID EQUAL simple_expression','var_declaration',4,'p_var_declaration','tinybit_yacc.py',61),
  ('var_type -> INT','var_type',1,'p_var_type_INT','tinybit_yacc.py',74),
  ('var_type -> FLOAT','var_type',1,'p_var_type_FLOAT','tinybit_yacc.py',80),
  ('var_declaration -> var_type ID dimensiones','var_declaration',3,'p_var_declaration_array','tinybit_yacc.py',87),
  ('dimensiones -> dimensiones LBRACKET expression RBRACKET','dimensiones',4,'p_var_dimensiones_array','tinybit_yacc.py',96),
  ('dimensiones -> LBRACKET expression RBRACKET','dimensiones',3,'p_var_dimensiones_array','tinybit_yacc.py',97),
  ('PROCESS_declaration -> PROCESS ID DO statements_nont END','PROCESS_declaration',5,'p_PROCESS_declaration','tinybit_yacc.py',103),
  ('statements_nont -> statements_nont statement','statements_nont',2,'p_statements_nont','tinybit_yacc.py',109),
  ('statements_nont -> statement','statements_nont',1,'p_statements_nont','tinybit_yacc.py',110),
  ('statement -> expression_nont','statement',1,'p_statement','tinybit_yacc.py',115),
  ('statement -> condition_nont','statement',1,'p_statement','tinybit_yacc.py',116),
  ('statement -> iteration_nont','statement',1,'p_statement','tinybit_yacc.py',117),
  ('statement -> var_declaration','statement',1,'p_statement','tinybit_yacc.py',118),
  ('statement -> call','statement',1,'p_statement','tinybit_yacc.py',119),
  ('expression_nont -> expression','expression_nont',1,'p_expression_simple','tinybit_yacc.py',125),
  ('expression_nont -> SETOUT LPAREN QUOTES ID QUOTES RPAREN','expression_nont',6,'p_expression_SETOUT','tinybit_yacc.py',130),
  ('expression_nont -> SETOUT LPAREN QUOTES ID QUOTES COMMA ENDL RPAREN','expression_nont',8,'p_expression_SETOUT','tinybit_yacc.py',131),
  ('expression_nont -> SETOUT LPAREN var RPAREN','expression_nont',4,'p_expression_SETOUT','tinybit_yacc.py',132),
  ('expression_nont -> SETOUT LPAREN var COMMA ENDL RPAREN','expression_nont',6,'p_expression_SETOUT','tinybit_yacc.py',133),
  ('expression_nont -> SETOUT LPAREN var COMMA var COMMA RPAREN','expression_nont',7,'p_expression_SETOUT','tinybit_yacc.py',134),
  ('expression_nont -> SETOUT LPAREN var COMMA var COMMA ENDL RPAREN','expression_nont',8,'p_expression_SETOUT','tinybit_yacc.py',135),
  ('expression_nont -> GETIN LPAREN var RPAREN','expression_nont',4,'p_expression_GETIN','tinybit_yacc.py',141),
  ('expression_nont -> GETIN LPAREN var COMMA var RPAREN','expression_nont',6,'p_expression_GETIN','tinybit_yacc.py',142),
  ('expression_nont -> ID PLUSPLUS','expression_nont',2,'p_expression_overload','tinybit_yacc.py',148),
  ('expression_nont -> ID MINUSMINUS','expression_nont',2,'p_expression_overload','tinybit_yacc.py',149),
  ('condition_nont -> IF expression THEN statements_nont END','condition_nont',5,'p_condition_if','tinybit_yacc.py',154),
  ('condition_nont -> IF expression THEN statements_nont ELSE statements_nont END','condition_nont',7,'p_condition_if_else','tinybit_yacc.py',159),
  ('iteration_nont -> FOR expression ARROW expression DO statements_nont LOOP','iteration_nont',7,'p_iteration_for','tinybit_yacc.py',164),
  ('iteration_nont -> WHILE expression DO statements_nont LOOP','iteration_nont',5,'p_iteration_while','tinybit_yacc.py',169),
  ('expression -> var EQUAL expression','expression',3,'p_expression_equal','tinybit_yacc.py',174),
  ('var -> ID','var',1,'p_var_ID','tinybit_yacc.py',179),
  ('var -> var ID LBRACKET expression RBRACKET','var',5,'p_var_bracket','tinybit_yacc.py',184),
  ('var -> ID vardimen','var',2,'p_var_bracket','tinybit_yacc.py',185),
  ('vardimen -> vardimen LBRACKET expression RBRACKET','vardimen',4,'p_var_dimen','tinybit_yacc.py',191),
  ('vardimen -> LBRACKET expression RBRACKET','vardimen',3,'p_var_dimen','tinybit_yacc.py',192),
  ('expression -> simple_expression','expression',1,'p_expression_2','tinybit_yacc.py',198),
  ('simple_expression -> additive_expression checkop additive_expression','simple_expression',3,'p_simple_expression_1','tinybit_yacc.py',203),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression_2','tinybit_yacc.py',207),
  ('checkop -> LESS','checkop',1,'p_checkop','tinybit_yacc.py',212),
  ('checkop -> LESSEQUAL','checkop',1,'p_checkop','tinybit_yacc.py',213),
  ('checkop -> GREATER','checkop',1,'p_checkop','tinybit_yacc.py',214),
  ('checkop -> GREATEREQUAL','checkop',1,'p_checkop','tinybit_yacc.py',215),
  ('checkop -> DEQUAL','checkop',1,'p_checkop','tinybit_yacc.py',216),
  ('checkop -> DISTINT','checkop',1,'p_checkop','tinybit_yacc.py',217),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression_1','tinybit_yacc.py',224),
  ('additive_expression -> term','additive_expression',1,'p_additive_justerm','tinybit_yacc.py',234),
  ('addop -> PLUS','addop',1,'p_addop','tinybit_yacc.py',238),
  ('addop -> MINUS','addop',1,'p_addop','tinybit_yacc.py',239),
  ('factor -> var','factor',1,'p_factor','tinybit_yacc.py',245),
  ('factor -> NUMBER','factor',1,'p_factor','tinybit_yacc.py',246),
  ('factor -> NUMBER_FLOAT','factor',1,'p_factor','tinybit_yacc.py',247),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_1','tinybit_yacc.py',252),
  ('call -> CALL LPAREN ID RPAREN','call',4,'p_call','tinybit_yacc.py',256),
  ('term -> term mulop factor','term',3,'p_term_mulop','tinybit_yacc.py',262),
  ('term -> factor','term',1,'p_term_mulop1','tinybit_yacc.py',271),
  ('mulop -> TIMES','mulop',1,'p_mulop','tinybit_yacc.py',275),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','tinybit_yacc.py',276),
]
