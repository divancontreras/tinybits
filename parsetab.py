
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftNOTleftPLUSMINUSleftMULDIVleftEXPMODrightUMINUSrightUPLUSEQUALS IDENTIFIER NUM_INT NUM_FLOAT LPAREN RPAREN LBRACK RBRACK COMMA STRING NEWLINE LSQBRACK RSQBRACK COLON PLUS EXP MINUS MUL DIV MOD LSHIFT RSHIFT BIT_AND BIT_OR BIT_XOR BIT_NEG PLUS_EQUAL MINUS_EQUAL PLUS_EQ MINUS_EQ MUL_EQ DIV_EQ MOD_EQ EXP_EQ TRUE FALSE EQ NEQ GT GTE LT LTE ARROW_LTR ARROW_RTL IF ELSE FOR IN WHILE EXIT PROCESS BEGIN END THEN DO SETOUT AND OR NOTprogram : BEGIN statement_list END\n    statement_list : statement\n                   | statement_list statement\n    \n    statement : identifier\n              | expression\n              | if_statement\n    \n    identifier : IDENTIFIER\n    \n    statement : EXIT \n    \n    primitive : NUM_INT\n              | NUM_FLOAT\n              | STRING\n              | boolean\n    \n    expression : expression PLUS expression %prec PLUS\n            | expression MINUS expression %prec MINUS\n            | expression MUL expression %prec MUL\n            | expression DIV expression %prec DIV\n            | expression EXP expression %prec EXP\n            | expression MOD expression %prec MOD\n            | expression BIT_AND expression\n            | expression BIT_OR expression\n            | expression BIT_XOR expression\n            | expression LSHIFT expression\n            | expression RSHIFT expression\n    \n    boolean : expression EQ expression\n            | expression NEQ expression\n            | expression GT expression\n            | expression GTE expression\n            | expression LT expression\n            | expression LTE expression\n            | expression AND expression\n            | expression OR expression\n    \n    expression : MINUS expression %prec UMINUS\n               | PLUS expression %prec UPLUS\n               | BIT_NEG expression\n               | NOT expression\n    \n    expression : LPAREN expression RPAREN\n    \n    boolean : TRUE\n            | FALSE\n    \n    assignable : primitive\n               | expression\n    \n    arguments : arguments COMMA expression\n              | expression\n              |\n    \n    expression : LSQBRACK arguments RSQBRACK\n    \n    expression : identifier LSQBRACK expression RSQBRACK\n    \n    expression : identifier LSQBRACK expression COLON expression RSQBRACK\n               | identifier LSQBRACK COLON expression RSQBRACK\n               | identifier LSQBRACK expression COLON RSQBRACK\n               | identifier LSQBRACK COLON RSQBRACK\n    \n    statement : identifier LSQBRACK expression RSQBRACK EQUALS expression \n    \n    expression : identifier EQUALS assignable \n    \n    if_statement : IF expression THEN LBRACK statement_list RBRACK\n    \n    if_statement : IF expression THEN LBRACK statement_list RBRACK ELSE LBRACK statement_list RBRACK\n    \n    if_statement : IF expression THEN LBRACK statement_list RBRACK ELSE if_statement\n    \n    expression : expression IN expression\n               | expression NOT IN expression\n    \n    statement : SETOUT LPAREN arguments RPAREN\n    \n    statement : identifier PLUS_EQ expression \n               | identifier MINUS_EQ expression \n               | identifier MUL_EQ expression \n               | identifier DIV_EQ expression \n               | identifier EXP_EQ expression \n               | identifier MOD_EQ expression \n    \n    expression : identifier PLUS_EQUAL primitive\n               | identifier MINUS_EQUAL primitive\n    \n    expression : primitive\n               | STRING\n               | identifier\n    \n    statement : FOR identifier IN expression ARROW_LTR expression DO LBRACK statement_list RBRACK\n              | FOR identifier IN expression ARROW_RTL expression DO LBRACK statement_list RBRACK\n    \n    statement : FOR identifier IN expression LBRACK statement_list RBRACK\n    \n    statement : WHILE expression DO LBRACK statement_list RBRACK\n    \n    statement : PROCESS identifier DO LBRACK statement_list RBRACK\n    \n    expression : identifier LPAREN arguments RPAREN\n    statement : identifier LPAREN arguments RPAREN \n    '
    
_lr_action_items = {'BEGIN':([0,],[2,]),'$end':([1,28,],[0,-1,]),'EXIT':([2,3,4,5,6,7,8,15,20,21,23,24,25,26,27,29,64,70,71,72,73,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,125,126,127,131,133,134,135,138,139,140,141,143,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[8,8,-2,-4,-5,-6,-8,-7,-66,-11,-9,-10,-12,-37,-38,-3,-68,-33,-32,-34,-35,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,-45,-49,-74,-56,-57,8,8,8,-48,-47,-45,-74,8,8,8,8,-50,-46,8,-72,-73,-52,-71,8,8,8,-54,8,8,8,-69,-70,-53,]),'SETOUT':([2,3,4,5,6,7,8,15,20,21,23,24,25,26,27,29,64,70,71,72,73,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,125,126,127,131,133,134,135,138,139,140,141,143,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[10,10,-2,-4,-5,-6,-8,-7,-66,-11,-9,-10,-12,-37,-38,-3,-68,-33,-32,-34,-35,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,-45,-49,-74,-56,-57,10,10,10,-48,-47,-45,-74,10,10,10,10,-50,-46,10,-72,-73,-52,-71,10,10,10,-54,10,10,10,-69,-70,-53,]),'FOR':([2,3,4,5,6,7,8,15,20,21,23,24,25,26,27,29,64,70,71,72,73,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,125,126,127,131,133,134,135,138,139,140,141,143,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[12,12,-2,-4,-5,-6,-8,-7,-66,-11,-9,-10,-12,-37,-38,-3,-68,-33,-32,-34,-35,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,-45,-49,-74,-56,-57,12,12,12,-48,-47,-45,-74,12,12,12,12,-50,-46,12,-72,-73,-52,-71,12,12,12,-54,12,12,12,-69,-70,-53,]),'WHILE':([2,3,4,5,6,7,8,15,20,21,23,24,25,26,27,29,64,70,71,72,73,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,125,126,127,131,133,134,135,138,139,140,141,143,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[13,13,-2,-4,-5,-6,-8,-7,-66,-11,-9,-10,-12,-37,-38,-3,-68,-33,-32,-34,-35,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,-45,-49,-74,-56,-57,13,13,13,-48,-47,-45,-74,13,13,13,13,-50,-46,13,-72,-73,-52,-71,13,13,13,-54,13,13,13,-69,-70,-53,]),'PROCESS':([2,3,4,5,6,7,8,15,20,21,23,24,25,26,27,29,64,70,71,72,73,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,125,126,127,131,133,134,135,138,139,140,141,143,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[14,14,-2,-4,-5,-6,-8,-7,-66,-11,-9,-10,-12,-37,-38,-3,-68,-33,-32,-34,-35,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,-45,-49,-74,-56,-57,14,14,14,-48,-47,-45,-74,14,14,14,14,-50,-46,14,-72,-73,-52,-71,14,14,14,-54,14,14,14,-69,-70,-53,]),'IDENTIFIER':([2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,64,65,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[15,15,-2,-4,-5,-6,-8,15,15,15,15,15,-7,15,15,15,15,-66,-11,15,-9,-10,-12,-37,-38,-3,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-68,15,-33,-32,-34,-35,15,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,15,-24,-25,-26,-27,-28,-29,-30,-31,-44,15,15,15,-36,15,-45,15,-49,-74,-56,-57,15,15,15,15,-48,-47,-45,-74,15,15,15,15,15,15,-50,-46,15,-72,-73,-52,-71,15,15,15,-54,15,15,15,-69,-70,-53,]),'MINUS':([2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[17,17,-2,-4,42,-6,-8,17,17,17,-7,17,17,17,17,-66,-11,17,-9,-10,-12,-37,-38,-3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,42,-68,17,42,42,-33,-32,42,42,42,42,17,-51,-39,42,-11,42,42,42,42,42,42,-64,42,-65,-13,-14,-15,-16,-17,-18,42,42,42,42,42,42,17,42,42,42,42,42,42,42,42,-44,17,17,17,-36,17,-45,17,42,-49,-74,42,42,42,-57,42,17,17,17,17,42,-48,-47,-45,-74,17,17,17,17,17,17,42,-46,42,17,42,-72,-73,-52,-71,17,17,17,-54,17,17,17,-69,-70,-53,]),'PLUS':([2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[16,16,-2,-4,41,-6,-8,16,16,16,-7,16,16,16,16,-66,-11,16,-9,-10,-12,-37,-38,-3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,41,-68,16,41,41,-33,-32,41,41,41,41,16,-51,-39,41,-11,41,41,41,41,41,41,-64,41,-65,-13,-14,-15,-16,-17,-18,41,41,41,41,41,41,16,41,41,41,41,41,41,41,41,-44,16,16,16,-36,16,-45,16,41,-49,-74,41,41,41,-57,41,16,16,16,16,41,-48,-47,-45,-74,16,16,16,16,16,16,41,-46,41,16,41,-72,-73,-52,-71,16,16,16,-54,16,16,16,-69,-70,-53,]),'BIT_NEG':([2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,64,65,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[18,18,-2,-4,-5,-6,-8,18,18,18,-7,18,18,18,18,-66,-11,18,-9,-10,-12,-37,-38,-3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-68,18,-33,-32,-34,-35,18,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,18,-24,-25,-26,-27,-28,-29,-30,-31,-44,18,18,18,-36,18,-45,18,-49,-74,-56,-57,18,18,18,18,-48,-47,-45,-74,18,18,18,18,18,18,-50,-46,18,-72,-73,-52,-71,18,18,18,-54,18,18,18,-69,-70,-53,]),'NOT':([2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,63,64,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[19,19,-2,-4,53,-6,-8,19,19,19,-7,19,19,19,19,-66,-11,19,-9,-10,-12,-37,-38,-3,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,53,-68,19,53,53,-33,-32,53,-35,53,53,19,-51,-39,53,-11,53,53,53,53,53,53,-64,53,-65,-13,-14,-15,-16,-17,-18,53,53,53,53,53,53,19,53,53,53,53,53,53,53,53,-44,19,19,19,-36,19,-45,19,53,-49,-74,53,53,53,-57,53,19,19,19,19,53,-48,-47,-45,-74,19,19,19,19,19,19,53,-46,53,19,53,-72,-73,-52,-71,19,19,19,-54,19,19,19,-69,-70,-53,]),'LPAREN':([2,3,4,5,6,7,8,9,10,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,64,65,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[11,11,-2,38,-5,-6,-8,11,65,11,11,-7,11,11,11,11,-66,-11,11,-9,-10,-12,-37,-38,-3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,115,11,-33,-32,-34,-35,11,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,11,-24,-25,-26,-27,-28,-29,-30,-31,-44,11,11,11,-36,11,-45,11,-49,-74,-56,-57,11,11,11,11,-48,-47,-45,-74,11,11,11,11,11,11,-50,-46,11,-72,-73,-52,-71,11,11,11,-54,11,11,11,-69,-70,-53,]),'LSQBRACK':([2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,64,65,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[9,9,-2,30,-5,-6,-8,9,9,9,-7,9,9,9,9,-66,-11,9,-9,-10,-12,-37,-38,-3,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,114,9,-33,-32,-34,-35,9,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,9,-24,-25,-26,-27,-28,-29,-30,-31,-44,9,9,9,-36,9,-45,9,-49,-74,-56,-57,9,9,9,9,-48,-47,-45,-74,9,9,9,9,9,9,-50,-46,9,-72,-73,-52,-71,9,9,9,-54,9,9,9,-69,-70,-53,]),'STRING':([2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,64,65,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[21,21,-2,-4,-5,-6,-8,21,21,21,-7,21,21,21,21,-66,-11,21,-9,-10,-12,-37,-38,-3,21,80,21,21,21,21,21,21,21,80,80,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-68,21,-33,-32,-34,-35,21,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,21,-24,-25,-26,-27,-28,-29,-30,-31,-44,21,21,21,-36,21,-45,21,-49,-74,-56,-57,21,21,21,21,-48,-47,-45,-74,21,21,21,21,21,21,-50,-46,21,-72,-73,-52,-71,21,21,21,-54,21,21,21,-69,-70,-53,]),'IF':([2,3,4,5,6,7,8,15,20,21,23,24,25,26,27,29,64,70,71,72,73,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,125,126,127,131,133,134,135,138,139,140,141,143,145,146,147,148,149,151,153,154,155,157,159,160,161,162,163,164,165,166,167,168,169,],[22,22,-2,-4,-5,-6,-8,-7,-66,-11,-9,-10,-12,-37,-38,-3,-68,-33,-32,-34,-35,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,-45,-49,-74,-56,-57,22,22,22,-48,-47,-45,-74,22,22,22,22,-50,-46,22,-72,-73,-52,-71,22,22,22,22,-54,22,22,22,-69,-70,-53,]),'NUM_INT':([2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,64,65,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[23,23,-2,-4,-5,-6,-8,23,23,23,-7,23,23,23,23,-66,-11,23,-9,-10,-12,-37,-38,-3,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-68,23,-33,-32,-34,-35,23,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,23,-24,-25,-26,-27,-28,-29,-30,-31,-44,23,23,23,-36,23,-45,23,-49,-74,-56,-57,23,23,23,23,-48,-47,-45,-74,23,23,23,23,23,23,-50,-46,23,-72,-73,-52,-71,23,23,23,-54,23,23,23,-69,-70,-53,]),'NUM_FLOAT':([2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,64,65,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[24,24,-2,-4,-5,-6,-8,24,24,24,-7,24,24,24,24,-66,-11,24,-9,-10,-12,-37,-38,-3,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-68,24,-33,-32,-34,-35,24,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,24,-24,-25,-26,-27,-28,-29,-30,-31,-44,24,24,24,-36,24,-45,24,-49,-74,-56,-57,24,24,24,24,-48,-47,-45,-74,24,24,24,24,24,24,-50,-46,24,-72,-73,-52,-71,24,24,24,-54,24,24,24,-69,-70,-53,]),'TRUE':([2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,64,65,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[26,26,-2,-4,-5,-6,-8,26,26,26,-7,26,26,26,26,-66,-11,26,-9,-10,-12,-37,-38,-3,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-68,26,-33,-32,-34,-35,26,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,26,-24,-25,-26,-27,-28,-29,-30,-31,-44,26,26,26,-36,26,-45,26,-49,-74,-56,-57,26,26,26,26,-48,-47,-45,-74,26,26,26,26,26,26,-50,-46,26,-72,-73,-52,-71,26,26,26,-54,26,26,26,-69,-70,-53,]),'FALSE':([2,3,4,5,6,7,8,9,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,64,65,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,122,123,125,126,127,131,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,151,153,154,155,157,160,161,162,163,164,165,166,167,168,169,],[27,27,-2,-4,-5,-6,-8,27,27,27,-7,27,27,27,27,-66,-11,27,-9,-10,-12,-37,-38,-3,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-68,27,-33,-32,-34,-35,27,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,27,-24,-25,-26,-27,-28,-29,-30,-31,-44,27,27,27,-36,27,-45,27,-49,-74,-56,-57,27,27,27,27,-48,-47,-45,-74,27,27,27,27,27,27,-50,-46,27,-72,-73,-52,-71,27,27,27,-54,27,27,27,-69,-70,-53,]),'END':([3,4,5,6,7,8,15,20,21,23,24,25,26,27,29,64,70,71,72,73,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,125,126,127,131,138,139,140,141,148,149,153,154,155,157,163,167,168,169,],[28,-2,-4,-5,-6,-8,-7,-66,-11,-9,-10,-12,-37,-38,-3,-68,-33,-32,-34,-35,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,-45,-49,-74,-56,-57,-48,-47,-45,-74,-50,-46,-72,-73,-52,-71,-54,-69,-70,-53,]),'RBRACK':([4,5,6,7,8,15,20,21,23,24,25,26,27,29,64,70,71,72,73,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,125,126,127,131,138,139,140,141,145,146,147,148,149,151,153,154,155,157,163,164,165,166,167,168,169,],[-2,-4,-5,-6,-8,-7,-66,-11,-9,-10,-12,-37,-38,-3,-68,-33,-32,-34,-35,-51,-39,-40,-11,-58,-59,-60,-61,-62,-63,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,-45,-49,-74,-56,-57,-48,-47,-45,-74,153,154,155,-50,-46,157,-72,-73,-52,-71,-54,167,168,169,-69,-70,-53,]),'PLUS_EQ':([5,15,],[32,-7,]),'MINUS_EQ':([5,15,],[33,-7,]),'MUL_EQ':([5,15,],[34,-7,]),'DIV_EQ':([5,15,],[35,-7,]),'EXP_EQ':([5,15,],[36,-7,]),'MOD_EQ':([5,15,],[37,-7,]),'EQUALS':([5,15,64,122,],[31,-7,31,136,]),'PLUS_EQUAL':([5,15,64,],[39,-7,39,]),'MINUS_EQUAL':([5,15,64,],[40,-7,40,]),'MUL':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,43,-7,-66,-11,-9,-10,-12,-37,-38,43,-68,43,43,-33,-32,43,43,43,43,-51,-39,43,-11,43,43,43,43,43,43,-64,43,-65,43,43,-15,-16,-17,-18,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-44,-36,-45,43,-49,-74,43,43,43,43,43,-48,-47,-45,-74,43,-46,43,43,]),'DIV':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,44,-7,-66,-11,-9,-10,-12,-37,-38,44,-68,44,44,-33,-32,44,44,44,44,-51,-39,44,-11,44,44,44,44,44,44,-64,44,-65,44,44,-15,-16,-17,-18,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-44,-36,-45,44,-49,-74,44,44,44,44,44,-48,-47,-45,-74,44,-46,44,44,]),'EXP':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,45,-7,-66,-11,-9,-10,-12,-37,-38,45,-68,45,45,-33,-32,45,45,45,45,-51,-39,45,-11,45,45,45,45,45,45,-64,45,-65,45,45,45,45,-17,-18,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-44,-36,-45,45,-49,-74,45,45,45,45,45,-48,-47,-45,-74,45,-46,45,45,]),'MOD':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,46,-7,-66,-11,-9,-10,-12,-37,-38,46,-68,46,46,-33,-32,46,46,46,46,-51,-39,46,-11,46,46,46,46,46,46,-64,46,-65,46,46,46,46,-17,-18,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-44,-36,-45,46,-49,-74,46,46,46,46,46,-48,-47,-45,-74,46,-46,46,46,]),'BIT_AND':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,47,-7,-66,-11,-9,-10,-12,-37,-38,47,-68,47,47,-33,-32,47,-35,47,47,-51,-39,47,-11,47,47,47,47,47,47,-64,47,-65,-13,-14,-15,-16,-17,-18,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-44,-36,-45,47,-49,-74,47,47,47,47,47,-48,-47,-45,-74,47,-46,47,47,]),'BIT_OR':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,48,-7,-66,-11,-9,-10,-12,-37,-38,48,-68,48,48,-33,-32,48,-35,48,48,-51,-39,48,-11,48,48,48,48,48,48,-64,48,-65,-13,-14,-15,-16,-17,-18,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-44,-36,-45,48,-49,-74,48,48,48,48,48,-48,-47,-45,-74,48,-46,48,48,]),'BIT_XOR':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,49,-7,-66,-11,-9,-10,-12,-37,-38,49,-68,49,49,-33,-32,49,-35,49,49,-51,-39,49,-11,49,49,49,49,49,49,-64,49,-65,-13,-14,-15,-16,-17,-18,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-44,-36,-45,49,-49,-74,49,49,49,49,49,-48,-47,-45,-74,49,-46,49,49,]),'LSHIFT':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,50,-7,-66,-11,-9,-10,-12,-37,-38,50,-68,50,50,-33,-32,50,-35,50,50,-51,-39,50,-11,50,50,50,50,50,50,-64,50,-65,-13,-14,-15,-16,-17,-18,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-44,-36,-45,50,-49,-74,50,50,50,50,50,-48,-47,-45,-74,50,-46,50,50,]),'RSHIFT':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,51,-7,-66,-11,-9,-10,-12,-37,-38,51,-68,51,51,-33,-32,51,-35,51,51,-51,-39,51,-11,51,51,51,51,51,51,-64,51,-65,-13,-14,-15,-16,-17,-18,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-44,-36,-45,51,-49,-74,51,51,51,51,51,-48,-47,-45,-74,51,-46,51,51,]),'IN':([5,6,15,20,21,23,24,25,26,27,53,63,64,66,67,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,52,-7,-66,-11,-9,-10,-12,-37,-38,103,52,-68,52,118,52,-33,-32,52,-35,52,52,-51,-39,52,-11,52,52,52,52,52,52,-64,52,-65,-13,-14,-15,-16,-17,-18,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-44,-36,-45,52,-49,-74,52,52,52,52,52,-48,-47,-45,-74,52,-46,52,52,]),'EQ':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,54,-7,-66,-11,-9,-10,-12,-37,-38,54,-68,54,54,-33,-32,54,-35,54,54,-51,-39,54,-11,54,54,54,54,54,54,-64,54,-65,-13,-14,-15,-16,-17,-18,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-44,-36,-45,54,-49,-74,54,54,54,54,54,-48,-47,-45,-74,54,-46,54,54,]),'NEQ':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,55,-7,-66,-11,-9,-10,-12,-37,-38,55,-68,55,55,-33,-32,55,-35,55,55,-51,-39,55,-11,55,55,55,55,55,55,-64,55,-65,-13,-14,-15,-16,-17,-18,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-44,-36,-45,55,-49,-74,55,55,55,55,55,-48,-47,-45,-74,55,-46,55,55,]),'GT':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,56,-7,-66,-11,-9,-10,-12,-37,-38,56,-68,56,56,-33,-32,56,-35,56,56,-51,-39,56,-11,56,56,56,56,56,56,-64,56,-65,-13,-14,-15,-16,-17,-18,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-44,-36,-45,56,-49,-74,56,56,56,56,56,-48,-47,-45,-74,56,-46,56,56,]),'GTE':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,57,-7,-66,-11,-9,-10,-12,-37,-38,57,-68,57,57,-33,-32,57,-35,57,57,-51,-39,57,-11,57,57,57,57,57,57,-64,57,-65,-13,-14,-15,-16,-17,-18,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-44,-36,-45,57,-49,-74,57,57,57,57,57,-48,-47,-45,-74,57,-46,57,57,]),'LT':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,58,-7,-66,-11,-9,-10,-12,-37,-38,58,-68,58,58,-33,-32,58,-35,58,58,-51,-39,58,-11,58,58,58,58,58,58,-64,58,-65,-13,-14,-15,-16,-17,-18,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-44,-36,-45,58,-49,-74,58,58,58,58,58,-48,-47,-45,-74,58,-46,58,58,]),'LTE':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,59,-7,-66,-11,-9,-10,-12,-37,-38,59,-68,59,59,-33,-32,59,-35,59,59,-51,-39,59,-11,59,59,59,59,59,59,-64,59,-65,-13,-14,-15,-16,-17,-18,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-44,-36,-45,59,-49,-74,59,59,59,59,59,-48,-47,-45,-74,59,-46,59,59,]),'AND':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,60,-7,-66,-11,-9,-10,-12,-37,-38,60,-68,60,60,-33,-32,60,-35,60,60,-51,-39,60,-11,60,60,60,60,60,60,-64,60,-65,-13,-14,-15,-16,-17,-18,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-44,-36,-45,60,-49,-74,60,60,60,60,60,-48,-47,-45,-74,60,-46,60,60,]),'OR':([5,6,15,20,21,23,24,25,26,27,63,64,66,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,122,124,125,126,127,128,129,132,137,138,139,140,141,148,149,150,152,],[-68,61,-7,-66,-11,-9,-10,-12,-37,-38,61,-68,61,61,-33,-32,61,-35,61,61,-51,-39,61,-11,61,61,61,61,61,61,-64,61,-65,-13,-14,-15,-16,-17,-18,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-44,-36,-45,61,-49,-74,61,61,61,61,61,-48,-47,-45,-74,61,-46,61,61,]),'RSQBRACK':([9,15,20,21,23,24,25,26,27,62,63,64,70,71,72,73,75,76,77,78,79,80,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,123,124,125,127,128,129,137,138,139,140,141,149,],[-43,-7,-66,-11,-9,-10,-12,-37,-38,112,-42,-68,-33,-32,-34,-35,122,125,-51,-39,-40,-11,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,138,139,-49,-56,-41,140,149,-48,-47,-45,-74,-46,]),'COMMA':([9,15,20,21,23,24,25,26,27,38,62,63,64,65,70,71,72,73,77,78,79,80,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,115,116,117,125,127,128,130,138,139,140,141,149,],[-43,-7,-66,-11,-9,-10,-12,-37,-38,-43,113,-42,-68,-43,-33,-32,-34,-35,-51,-39,-40,-11,113,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-43,113,-36,-49,-56,-41,113,-48,-47,-45,-74,-46,]),'RPAREN':([15,20,21,23,24,25,26,27,38,63,64,65,66,70,71,72,73,77,78,79,80,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,115,116,117,125,127,128,130,138,139,140,141,149,],[-7,-66,-11,-9,-10,-12,-37,-38,-43,-42,-68,-43,117,-33,-32,-34,-35,-51,-39,-40,-11,126,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-43,131,-36,-49,-56,-41,141,-48,-47,-45,-74,-46,]),'DO':([15,20,21,23,24,25,26,27,64,68,69,70,71,72,73,77,78,79,80,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,125,127,138,139,140,141,149,150,152,],[-7,-66,-11,-9,-10,-12,-37,-38,-68,119,120,-33,-32,-34,-35,-51,-39,-40,-11,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,-49,-56,-48,-47,-45,-74,-46,156,158,]),'THEN':([15,20,21,23,24,25,26,27,64,70,71,72,73,74,77,78,79,80,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,125,127,138,139,140,141,149,],[-7,-66,-11,-9,-10,-12,-37,-38,-68,-33,-32,-34,-35,121,-51,-39,-40,-11,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,-49,-56,-48,-47,-45,-74,-46,]),'COLON':([15,20,21,23,24,25,26,27,30,64,70,71,72,73,75,77,78,79,80,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,114,117,125,127,129,138,139,140,141,149,],[-7,-66,-11,-9,-10,-12,-37,-38,76,-68,-33,-32,-34,-35,123,-51,-39,-40,-11,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,76,-36,-49,-56,123,-48,-47,-45,-74,-46,]),'ARROW_LTR':([15,20,21,23,24,25,26,27,64,70,71,72,73,77,78,79,80,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,125,127,132,138,139,140,141,149,],[-7,-66,-11,-9,-10,-12,-37,-38,-68,-33,-32,-34,-35,-51,-39,-40,-11,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,-49,-56,142,-48,-47,-45,-74,-46,]),'ARROW_RTL':([15,20,21,23,24,25,26,27,64,70,71,72,73,77,78,79,80,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,125,127,132,138,139,140,141,149,],[-7,-66,-11,-9,-10,-12,-37,-38,-68,-33,-32,-34,-35,-51,-39,-40,-11,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,-49,-56,144,-48,-47,-45,-74,-46,]),'LBRACK':([15,20,21,23,24,25,26,27,64,70,71,72,73,77,78,79,80,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,117,119,120,121,125,127,132,138,139,140,141,149,156,158,159,],[-7,-66,-11,-9,-10,-12,-37,-38,-68,-33,-32,-34,-35,-51,-39,-40,-11,-64,-65,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-55,-24,-25,-26,-27,-28,-29,-30,-31,-44,-36,133,134,135,-49,-56,143,-48,-47,-45,-74,-46,160,161,162,]),'ELSE':([155,],[159,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([2,133,134,135,143,160,161,162,],[3,145,146,147,151,164,165,166,]),'statement':([2,3,133,134,135,143,145,146,147,151,160,161,162,164,165,166,],[4,29,4,4,4,4,29,29,29,29,4,4,4,29,29,29,]),'identifier':([2,3,9,11,12,13,14,16,17,18,19,22,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,65,76,103,113,114,115,118,123,133,134,135,136,142,143,144,145,146,147,151,160,161,162,164,165,166,],[5,5,64,64,67,64,69,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,5,5,5,64,64,5,64,5,5,5,5,5,5,5,5,5,5,]),'expression':([2,3,9,11,13,16,17,18,19,22,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,65,76,103,113,114,115,118,123,133,134,135,136,142,143,144,145,146,147,151,160,161,162,164,165,166,],[6,6,63,66,68,70,71,72,73,74,75,79,81,82,83,84,85,86,63,89,89,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,63,124,127,128,129,63,132,137,6,6,6,148,150,6,152,6,6,6,6,6,6,6,6,6,6,]),'if_statement':([2,3,133,134,135,143,145,146,147,151,159,160,161,162,164,165,166,],[7,7,7,7,7,7,7,7,7,7,163,7,7,7,7,7,7,]),'primitive':([2,3,9,11,13,16,17,18,19,22,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,65,76,103,113,114,115,118,123,133,134,135,136,142,143,144,145,146,147,151,160,161,162,164,165,166,],[20,20,20,20,20,20,20,20,20,20,20,78,20,20,20,20,20,20,20,88,90,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'boolean':([2,3,9,11,13,16,17,18,19,22,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,65,76,103,113,114,115,118,123,133,134,135,136,142,143,144,145,146,147,151,160,161,162,164,165,166,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'arguments':([9,38,65,115,],[62,87,116,130,]),'assignable':([31,],[77,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BEGIN statement_list END','program',3,'p_program','tinybit_yacc_ast.py',21),
  ('statement_list -> statement','statement_list',1,'p_statement_list','tinybit_yacc_ast.py',34),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','tinybit_yacc_ast.py',35),
  ('statement -> identifier','statement',1,'p_statement','tinybit_yacc_ast.py',46),
  ('statement -> expression','statement',1,'p_statement','tinybit_yacc_ast.py',47),
  ('statement -> if_statement','statement',1,'p_statement','tinybit_yacc_ast.py',48),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','tinybit_yacc_ast.py',55),
  ('statement -> EXIT','statement',1,'p_exit_','tinybit_yacc_ast.py',62),
  ('primitive -> NUM_INT','primitive',1,'p_primitive','tinybit_yacc_ast.py',69),
  ('primitive -> NUM_FLOAT','primitive',1,'p_primitive','tinybit_yacc_ast.py',70),
  ('primitive -> STRING','primitive',1,'p_primitive','tinybit_yacc_ast.py',71),
  ('primitive -> boolean','primitive',1,'p_primitive','tinybit_yacc_ast.py',72),
  ('expression -> expression PLUS expression','expression',3,'p_binary_op','tinybit_yacc_ast.py',82),
  ('expression -> expression MINUS expression','expression',3,'p_binary_op','tinybit_yacc_ast.py',83),
  ('expression -> expression MUL expression','expression',3,'p_binary_op','tinybit_yacc_ast.py',84),
  ('expression -> expression DIV expression','expression',3,'p_binary_op','tinybit_yacc_ast.py',85),
  ('expression -> expression EXP expression','expression',3,'p_binary_op','tinybit_yacc_ast.py',86),
  ('expression -> expression MOD expression','expression',3,'p_binary_op','tinybit_yacc_ast.py',87),
  ('expression -> expression BIT_AND expression','expression',3,'p_binary_op','tinybit_yacc_ast.py',88),
  ('expression -> expression BIT_OR expression','expression',3,'p_binary_op','tinybit_yacc_ast.py',89),
  ('expression -> expression BIT_XOR expression','expression',3,'p_binary_op','tinybit_yacc_ast.py',90),
  ('expression -> expression LSHIFT expression','expression',3,'p_binary_op','tinybit_yacc_ast.py',91),
  ('expression -> expression RSHIFT expression','expression',3,'p_binary_op','tinybit_yacc_ast.py',92),
  ('boolean -> expression EQ expression','boolean',3,'p_boolean_operators','tinybit_yacc_ast.py',98),
  ('boolean -> expression NEQ expression','boolean',3,'p_boolean_operators','tinybit_yacc_ast.py',99),
  ('boolean -> expression GT expression','boolean',3,'p_boolean_operators','tinybit_yacc_ast.py',100),
  ('boolean -> expression GTE expression','boolean',3,'p_boolean_operators','tinybit_yacc_ast.py',101),
  ('boolean -> expression LT expression','boolean',3,'p_boolean_operators','tinybit_yacc_ast.py',102),
  ('boolean -> expression LTE expression','boolean',3,'p_boolean_operators','tinybit_yacc_ast.py',103),
  ('boolean -> expression AND expression','boolean',3,'p_boolean_operators','tinybit_yacc_ast.py',104),
  ('boolean -> expression OR expression','boolean',3,'p_boolean_operators','tinybit_yacc_ast.py',105),
  ('expression -> MINUS expression','expression',2,'p_unary_operation','tinybit_yacc_ast.py',111),
  ('expression -> PLUS expression','expression',2,'p_unary_operation','tinybit_yacc_ast.py',112),
  ('expression -> BIT_NEG expression','expression',2,'p_unary_operation','tinybit_yacc_ast.py',113),
  ('expression -> NOT expression','expression',2,'p_unary_operation','tinybit_yacc_ast.py',114),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_paren','tinybit_yacc_ast.py',121),
  ('boolean -> TRUE','boolean',1,'p_boolean','tinybit_yacc_ast.py',128),
  ('boolean -> FALSE','boolean',1,'p_boolean','tinybit_yacc_ast.py',129),
  ('assignable -> primitive','assignable',1,'p_assignable','tinybit_yacc_ast.py',136),
  ('assignable -> expression','assignable',1,'p_assignable','tinybit_yacc_ast.py',137),
  ('arguments -> arguments COMMA expression','arguments',3,'p_comma_separated_expr','tinybit_yacc_ast.py',144),
  ('arguments -> expression','arguments',1,'p_comma_separated_expr','tinybit_yacc_ast.py',145),
  ('arguments -> <empty>','arguments',0,'p_comma_separated_expr','tinybit_yacc_ast.py',146),
  ('expression -> LSQBRACK arguments RSQBRACK','expression',3,'p_arrays','tinybit_yacc_ast.py',158),
  ('expression -> identifier LSQBRACK expression RSQBRACK','expression',4,'p_array_access','tinybit_yacc_ast.py',165),
  ('expression -> identifier LSQBRACK expression COLON expression RSQBRACK','expression',6,'p_slice','tinybit_yacc_ast.py',172),
  ('expression -> identifier LSQBRACK COLON expression RSQBRACK','expression',5,'p_slice','tinybit_yacc_ast.py',173),
  ('expression -> identifier LSQBRACK expression COLON RSQBRACK','expression',5,'p_slice','tinybit_yacc_ast.py',174),
  ('expression -> identifier LSQBRACK COLON RSQBRACK','expression',4,'p_slice','tinybit_yacc_ast.py',175),
  ('statement -> identifier LSQBRACK expression RSQBRACK EQUALS expression','statement',6,'p_array_access_assign','tinybit_yacc_ast.py',191),
  ('expression -> identifier EQUALS assignable','expression',3,'p_assign','tinybit_yacc_ast.py',198),
  ('if_statement -> IF expression THEN LBRACK statement_list RBRACK','if_statement',6,'p_ifstatement','tinybit_yacc_ast.py',205),
  ('if_statement -> IF expression THEN LBRACK statement_list RBRACK ELSE LBRACK statement_list RBRACK','if_statement',10,'p_ifstatement_else','tinybit_yacc_ast.py',212),
  ('if_statement -> IF expression THEN LBRACK statement_list RBRACK ELSE if_statement','if_statement',8,'p_ifstatement_else_if','tinybit_yacc_ast.py',219),
  ('expression -> expression IN expression','expression',3,'p_in_expression','tinybit_yacc_ast.py',226),
  ('expression -> expression NOT IN expression','expression',4,'p_in_expression','tinybit_yacc_ast.py',227),
  ('statement -> SETOUT LPAREN arguments RPAREN','statement',4,'p_print_statement','tinybit_yacc_ast.py',237),
  ('statement -> identifier PLUS_EQ expression','statement',3,'p_compound_operations','tinybit_yacc_ast.py',243),
  ('statement -> identifier MINUS_EQ expression','statement',3,'p_compound_operations','tinybit_yacc_ast.py',244),
  ('statement -> identifier MUL_EQ expression','statement',3,'p_compound_operations','tinybit_yacc_ast.py',245),
  ('statement -> identifier DIV_EQ expression','statement',3,'p_compound_operations','tinybit_yacc_ast.py',246),
  ('statement -> identifier EXP_EQ expression','statement',3,'p_compound_operations','tinybit_yacc_ast.py',247),
  ('statement -> identifier MOD_EQ expression','statement',3,'p_compound_operations','tinybit_yacc_ast.py',248),
  ('expression -> identifier PLUS_EQUAL primitive','expression',3,'p_increment_decrement_identifiers','tinybit_yacc_ast.py',255),
  ('expression -> identifier MINUS_EQUAL primitive','expression',3,'p_increment_decrement_identifiers','tinybit_yacc_ast.py',256),
  ('expression -> primitive','expression',1,'p_expression','tinybit_yacc_ast.py',266),
  ('expression -> STRING','expression',1,'p_expression','tinybit_yacc_ast.py',267),
  ('expression -> identifier','expression',1,'p_expression','tinybit_yacc_ast.py',268),
  ('statement -> FOR identifier IN expression ARROW_LTR expression DO LBRACK statement_list RBRACK','statement',10,'p_for_loop','tinybit_yacc_ast.py',275),
  ('statement -> FOR identifier IN expression ARROW_RTL expression DO LBRACK statement_list RBRACK','statement',10,'p_for_loop','tinybit_yacc_ast.py',276),
  ('statement -> FOR identifier IN expression LBRACK statement_list RBRACK','statement',7,'p_for_in_loop','tinybit_yacc_ast.py',283),
  ('statement -> WHILE expression DO LBRACK statement_list RBRACK','statement',6,'p_while_loop','tinybit_yacc_ast.py',290),
  ('statement -> PROCESS identifier DO LBRACK statement_list RBRACK','statement',6,'p_function_declaration','tinybit_yacc_ast.py',297),
  ('expression -> identifier LPAREN arguments RPAREN','expression',4,'p_function_call','tinybit_yacc_ast.py',310),
  ('statement -> identifier LPAREN arguments RPAREN','statement',4,'p_function_call','tinybit_yacc_ast.py',311),
]
