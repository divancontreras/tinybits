
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'START END SETOUT GETIN ELSE IF THEN DO PROCCES FLOAT LOOP INT WHILE FOR ID NUMBER PLUS PLUSPLUS MINUS MINUSMINUS TIMES DIVIDE LESS LESSEQUAL GREATER GREATEREQUAL EQUAL DEQUAL DISTINT COMMA LPAREN RPAREN LBRACKET RBRACKET MAIN empty COLON QUOTES ENDLprogram : START program_start ENDprogram_start : program_sequence main_declarationprogram_sequence : program_sequence declarationprogram_sequence : emptydeclaration : procces_declaration\n    | var_declaration\n    var_declaration : var_type ID\n    | var_type ID COMMA ID\n    | var_type ID EQUAL NUMBER\n    | var_type ID EQUAL var\n    var_type : INTvar_type : FLOATvar_declaration : var_type ID LBRACKET NUMBER RBRACKETmain_declaration : MAIN ID COLON statements_nont ENDprocces_declaration : PROCCES ID COLON statements_nont ENDstatements_nont : statements_nont statementstatements_nont : emptystatement : expression_nont\n            | condition_nont\n            | iteration_nont\n            | var_declaration\n    expression_nont : expressionexpression_nont : SETOUT LPAREN QUOTES ID QUOTES RPAREN \n    | SETOUT LPAREN QUOTES ID QUOTES COMMA ENDL RPAREN \n    | SETOUT LPAREN var RPAREN\n    | SETOUT LPAREN var COMMA ENDL RPAREN \n    | SETOUT LPAREN var COMMA var COMMA RPAREN \n    | SETOUT LPAREN var COMMA var COMMA ENDL RPAREN \n    expression_nont : GETIN LPAREN var RPAREN\n    | GETIN LPAREN var COMMA var RPAREN\n    expression_nont : ID PLUSPLUS\n    | PLUSPLUS ID\n    | ID MINUSMINUS\n    | MINUSMINUS ID\n    condition_nont : IF expression THEN statement ENDcondition_nont : IF expression THEN statement ELSE statement ENDiteration_nont : WHILE expression DO statement LOOPiteration_nont : FOR var COMMA expression COMMA expression DO statement LOOP\n| FOR var COMMA expression COMMA var PLUSPLUS DO statement LOOP\n| FOR var COMMA expression COMMA PLUSPLUS var DO statement LOOP\n| FOR var COMMA expression COMMA var MINUSMINUS DO statement LOOP\n| FOR var COMMA expression COMMA MINUSMINUS var DO statement LOOP\n    expression : var EQUAL expressionvar : IDvar : ID LBRACKET expression RBRACKETexpression : simple_expressionsimple_expression : additive_expression relop additive_expressionsimple_expression : additive_expressionrelop : LESS\n        | LESSEQUAL\n        | GREATER\n        | GREATEREQUAL\n        | DEQUAL\n        | DISTINT\n        | QUOTES\n    additive_expression : additive_expression addop termadditive_expression : termaddop : PLUS\n    | MINUS\n    factor : callcall : PROCCES IDterm : term mulop factorterm : factormulop :  TIMES\n                | DIVIDE\n    factor : LPAREN expression RPARENfactor : varfactor : NUMBER'
    
_lr_action_items = {'START':([0,],[2,]),'$end':([1,6,],[0,-1,]),'empty':([2,19,20,],[5,25,25,]),'END':([3,7,18,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,42,49,50,51,52,53,54,58,59,60,65,66,84,88,89,94,95,96,97,98,100,102,104,111,113,115,118,119,120,126,128,134,135,143,146,147,148,149,],[6,-2,-7,33,-17,56,-8,-44,-9,-10,-44,-14,-16,-18,-19,-20,-21,-22,-67,-68,-46,-48,-57,-63,-60,-13,-31,-33,-32,-34,-61,-66,-43,-47,-67,-56,-62,-45,-25,-29,111,-35,-37,-23,-26,-30,128,-27,-36,-24,-28,-38,-39,-41,-40,-42,]),'MAIN':([4,5,8,10,11,18,27,28,29,30,56,58,98,],[9,-4,-3,-5,-6,-7,-8,-44,-9,-10,-15,-13,-45,]),'PROCCES':([4,5,8,10,11,18,24,25,26,27,28,29,30,32,34,35,36,37,38,39,41,42,46,47,49,50,51,52,53,54,56,57,58,59,60,63,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,91,92,93,94,95,96,97,98,100,102,111,112,113,114,115,118,119,126,128,131,134,135,136,137,139,140,143,146,147,148,149,],[12,-4,-3,-5,-6,-7,55,-17,55,-8,-44,-9,-10,-44,-16,-18,-19,-20,-21,-22,55,-67,55,55,-68,-46,-48,-57,-63,-60,-15,55,-13,-31,-33,55,-32,-34,55,55,-49,-50,-51,-52,-53,-54,-55,-58,-59,55,-64,-65,-61,-66,-43,55,55,55,-47,-67,-56,-62,-45,-25,-29,-35,55,-37,55,-23,-26,-30,-27,-36,55,-24,-28,55,55,55,55,-38,-39,-41,-40,-42,]),'INT':([4,5,8,10,11,18,24,25,26,27,28,29,30,32,34,35,36,37,38,39,42,49,50,51,52,53,54,56,58,59,60,65,66,84,88,89,91,92,94,95,96,97,98,100,102,111,112,113,115,118,119,126,128,131,134,135,136,137,139,140,143,146,147,148,149,],[14,-4,-3,-5,-6,-7,14,-17,14,-8,-44,-9,-10,-44,-16,-18,-19,-20,-21,-22,-67,-68,-46,-48,-57,-63,-60,-15,-13,-31,-33,-32,-34,-61,-66,-43,14,14,-47,-67,-56,-62,-45,-25,-29,-35,14,-37,-23,-26,-30,-27,-36,14,-24,-28,14,14,14,14,-38,-39,-41,-40,-42,]),'FLOAT':([4,5,8,10,11,18,24,25,26,27,28,29,30,32,34,35,36,37,38,39,42,49,50,51,52,53,54,56,58,59,60,65,66,84,88,89,91,92,94,95,96,97,98,100,102,111,112,113,115,118,119,126,128,131,134,135,136,137,139,140,143,146,147,148,149,],[15,-4,-3,-5,-6,-7,15,-17,15,-8,-44,-9,-10,-44,-16,-18,-19,-20,-21,-22,-67,-68,-46,-48,-57,-63,-60,-15,-13,-31,-33,-32,-34,-61,-66,-43,15,15,-47,-67,-56,-62,-45,-25,-29,-35,15,-37,-23,-26,-30,-27,-36,15,-24,-28,15,15,15,15,-38,-39,-41,-40,-42,]),'ID':([9,12,13,14,15,18,21,22,24,25,26,27,28,29,30,32,34,35,36,37,38,39,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,88,89,91,92,93,94,95,96,97,98,100,101,102,103,111,112,113,114,115,118,119,123,124,126,128,131,134,135,136,137,139,140,143,146,147,148,149,],[16,17,18,-11,-12,-7,27,28,32,-17,32,-8,-44,-9,-10,-44,-16,-18,-19,-20,-21,-22,28,-67,65,66,28,28,28,-68,-46,-48,-57,-63,-60,84,28,-13,-31,-33,28,28,28,-32,-34,28,28,-49,-50,-51,-52,-53,-54,-55,-58,-59,28,-64,-65,-61,99,-66,-43,32,32,28,-47,-67,-56,-62,-45,-25,28,-29,28,-35,32,-37,28,-23,-26,-30,28,28,-27,-36,32,-24,-28,32,32,32,32,-38,-39,-41,-40,-42,]),'COLON':([16,17,],[19,20,]),'SETOUT':([18,24,25,26,27,28,29,30,32,34,35,36,37,38,39,42,49,50,51,52,53,54,58,59,60,65,66,84,88,89,91,92,94,95,96,97,98,100,102,111,112,113,115,118,119,126,128,131,134,135,136,137,139,140,143,146,147,148,149,],[-7,40,-17,40,-8,-44,-9,-10,-44,-16,-18,-19,-20,-21,-22,-67,-68,-46,-48,-57,-63,-60,-13,-31,-33,-32,-34,-61,-66,-43,40,40,-47,-67,-56,-62,-45,-25,-29,-35,40,-37,-23,-26,-30,-27,-36,40,-24,-28,40,40,40,40,-38,-39,-41,-40,-42,]),'GETIN':([18,24,25,26,27,28,29,30,32,34,35,36,37,38,39,42,49,50,51,52,53,54,58,59,60,65,66,84,88,89,91,92,94,95,96,97,98,100,102,111,112,113,115,118,119,126,128,131,134,135,136,137,139,140,143,146,147,148,149,],[-7,43,-17,43,-8,-44,-9,-10,-44,-16,-18,-19,-20,-21,-22,-67,-68,-46,-48,-57,-63,-60,-13,-31,-33,-32,-34,-61,-66,-43,43,43,-47,-67,-56,-62,-45,-25,-29,-35,43,-37,-23,-26,-30,-27,-36,43,-24,-28,43,43,43,43,-38,-39,-41,-40,-42,]),'PLUSPLUS':([18,24,25,26,27,28,29,30,32,34,35,36,37,38,39,42,49,50,51,52,53,54,58,59,60,65,66,84,88,89,91,92,94,95,96,97,98,100,102,111,112,113,114,115,118,119,121,126,128,131,134,135,136,137,139,140,143,146,147,148,149,],[-7,44,-17,44,-8,-44,-9,-10,59,-16,-18,-19,-20,-21,-22,-67,-68,-46,-48,-57,-63,-60,-13,-31,-33,-32,-34,-61,-66,-43,44,44,-47,-67,-56,-62,-45,-25,-29,-35,44,-37,123,-23,-26,-30,129,-27,-36,44,-24,-28,44,44,44,44,-38,-39,-41,-40,-42,]),'MINUSMINUS':([18,24,25,26,27,28,29,30,32,34,35,36,37,38,39,42,49,50,51,52,53,54,58,59,60,65,66,84,88,89,91,92,94,95,96,97,98,100,102,111,112,113,114,115,118,119,121,126,128,131,134,135,136,137,139,140,143,146,147,148,149,],[-7,45,-17,45,-8,-44,-9,-10,60,-16,-18,-19,-20,-21,-22,-67,-68,-46,-48,-57,-63,-60,-13,-31,-33,-32,-34,-61,-66,-43,45,45,-47,-67,-56,-62,-45,-25,-29,-35,45,-37,124,-23,-26,-30,130,-27,-36,45,-24,-28,45,45,45,45,-38,-39,-41,-40,-42,]),'IF':([18,24,25,26,27,28,29,30,32,34,35,36,37,38,39,42,49,50,51,52,53,54,58,59,60,65,66,84,88,89,91,92,94,95,96,97,98,100,102,111,112,113,115,118,119,126,128,131,134,135,136,137,139,140,143,146,147,148,149,],[-7,46,-17,46,-8,-44,-9,-10,-44,-16,-18,-19,-20,-21,-22,-67,-68,-46,-48,-57,-63,-60,-13,-31,-33,-32,-34,-61,-66,-43,46,46,-47,-67,-56,-62,-45,-25,-29,-35,46,-37,-23,-26,-30,-27,-36,46,-24,-28,46,46,46,46,-38,-39,-41,-40,-42,]),'WHILE':([18,24,25,26,27,28,29,30,32,34,35,36,37,38,39,42,49,50,51,52,53,54,58,59,60,65,66,84,88,89,91,92,94,95,96,97,98,100,102,111,112,113,115,118,119,126,128,131,134,135,136,137,139,140,143,146,147,148,149,],[-7,47,-17,47,-8,-44,-9,-10,-44,-16,-18,-19,-20,-21,-22,-67,-68,-46,-48,-57,-63,-60,-13,-31,-33,-32,-34,-61,-66,-43,47,47,-47,-67,-56,-62,-45,-25,-29,-35,47,-37,-23,-26,-30,-27,-36,47,-24,-28,47,47,47,47,-38,-39,-41,-40,-42,]),'FOR':([18,24,25,26,27,28,29,30,32,34,35,36,37,38,39,42,49,50,51,52,53,54,58,59,60,65,66,84,88,89,91,92,94,95,96,97,98,100,102,111,112,113,115,118,119,126,128,131,134,135,136,137,139,140,143,146,147,148,149,],[-7,48,-17,48,-8,-44,-9,-10,-44,-16,-18,-19,-20,-21,-22,-67,-68,-46,-48,-57,-63,-60,-13,-31,-33,-32,-34,-61,-66,-43,48,48,-47,-67,-56,-62,-45,-25,-29,-35,48,-37,-23,-26,-30,-27,-36,48,-24,-28,48,48,48,48,-38,-39,-41,-40,-42,]),'LPAREN':([18,24,25,26,27,28,29,30,32,34,35,36,37,38,39,40,41,42,43,46,47,49,50,51,52,53,54,57,58,59,60,63,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,91,92,93,94,95,96,97,98,100,102,111,112,113,114,115,118,119,126,128,131,134,135,136,137,139,140,143,146,147,148,149,],[-7,41,-17,41,-8,-44,-9,-10,-44,-16,-18,-19,-20,-21,-22,61,41,-67,64,41,41,-68,-46,-48,-57,-63,-60,41,-13,-31,-33,41,-32,-34,41,41,-49,-50,-51,-52,-53,-54,-55,-58,-59,41,-64,-65,-61,-66,-43,41,41,41,-47,-67,-56,-62,-45,-25,-29,-35,41,-37,41,-23,-26,-30,-27,-36,41,-24,-28,41,41,41,41,-38,-39,-41,-40,-42,]),'NUMBER':([18,22,23,24,25,26,27,28,29,30,32,34,35,36,37,38,39,41,42,46,47,49,50,51,52,53,54,57,58,59,60,63,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,91,92,93,94,95,96,97,98,100,102,111,112,113,114,115,118,119,126,128,131,134,135,136,137,139,140,143,146,147,148,149,],[-7,29,31,49,-17,49,-8,-44,-9,-10,-44,-16,-18,-19,-20,-21,-22,49,-67,49,49,-68,-46,-48,-57,-63,-60,49,-13,-31,-33,49,-32,-34,49,49,-49,-50,-51,-52,-53,-54,-55,-58,-59,49,-64,-65,-61,-66,-43,49,49,49,-47,-67,-56,-62,-45,-25,-29,-35,49,-37,49,-23,-26,-30,-27,-36,49,-24,-28,49,49,49,49,-38,-39,-41,-40,-42,]),'ELSE':([18,27,28,29,30,32,35,36,37,38,39,42,49,50,51,52,53,54,58,59,60,65,66,84,88,89,94,95,96,97,98,100,102,104,111,113,115,118,119,126,128,134,135,143,146,147,148,149,],[-7,-8,-44,-9,-10,-44,-18,-19,-20,-21,-22,-67,-68,-46,-48,-57,-63,-60,-13,-31,-33,-32,-34,-61,-66,-43,-47,-67,-56,-62,-45,-25,-29,112,-35,-37,-23,-26,-30,-27,-36,-24,-28,-38,-39,-41,-40,-42,]),'LOOP':([18,27,28,29,30,32,35,36,37,38,39,42,49,50,51,52,53,54,58,59,60,65,66,84,88,89,94,95,96,97,98,100,102,105,111,113,115,118,119,126,128,134,135,138,141,142,143,144,145,146,147,148,149,],[-7,-8,-44,-9,-10,-44,-18,-19,-20,-21,-22,-67,-68,-46,-48,-57,-63,-60,-13,-31,-33,-32,-34,-61,-66,-43,-47,-67,-56,-62,-45,-25,-29,113,-35,-37,-23,-26,-30,-27,-36,-24,-28,143,146,147,-38,148,149,-39,-41,-40,-42,]),'COMMA':([18,28,42,49,50,51,52,53,54,69,84,87,88,89,90,94,95,96,97,98,106,107,108,],[21,-44,-67,-68,-46,-48,-57,-63,-60,93,-61,101,-66,-43,103,-47,-67,-56,-62,-45,114,116,117,]),'EQUAL':([18,28,32,42,98,121,],[22,-44,-44,63,-45,63,]),'LBRACKET':([18,28,32,],[23,57,57,]),'TIMES':([28,32,42,49,52,53,54,84,88,95,96,97,98,121,],[-44,-44,-67,-68,82,-63,-60,-61,-66,-67,82,-62,-45,-67,]),'DIVIDE':([28,32,42,49,52,53,54,84,88,95,96,97,98,121,],[-44,-44,-67,-68,83,-63,-60,-61,-66,-67,83,-62,-45,-67,]),'LESS':([28,32,42,49,51,52,53,54,84,88,95,96,97,98,121,],[-44,-44,-67,-68,72,-57,-63,-60,-61,-66,-67,-56,-62,-45,-67,]),'LESSEQUAL':([28,32,42,49,51,52,53,54,84,88,95,96,97,98,121,],[-44,-44,-67,-68,73,-57,-63,-60,-61,-66,-67,-56,-62,-45,-67,]),'GREATER':([28,32,42,49,51,52,53,54,84,88,95,96,97,98,121,],[-44,-44,-67,-68,74,-57,-63,-60,-61,-66,-67,-56,-62,-45,-67,]),'GREATEREQUAL':([28,32,42,49,51,52,53,54,84,88,95,96,97,98,121,],[-44,-44,-67,-68,75,-57,-63,-60,-61,-66,-67,-56,-62,-45,-67,]),'DEQUAL':([28,32,42,49,51,52,53,54,84,88,95,96,97,98,121,],[-44,-44,-67,-68,76,-57,-63,-60,-61,-66,-67,-56,-62,-45,-67,]),'DISTINT':([28,32,42,49,51,52,53,54,84,88,95,96,97,98,121,],[-44,-44,-67,-68,77,-57,-63,-60,-61,-66,-67,-56,-62,-45,-67,]),'QUOTES':([28,32,42,49,51,52,53,54,61,84,88,95,96,97,98,99,121,],[-44,-44,-67,-68,78,-57,-63,-60,86,-61,-66,-67,-56,-62,-45,107,-67,]),'PLUS':([28,32,42,49,51,52,53,54,84,88,94,95,96,97,98,121,],[-44,-44,-67,-68,79,-57,-63,-60,-61,-66,79,-67,-56,-62,-45,-67,]),'MINUS':([28,32,42,49,51,52,53,54,84,88,94,95,96,97,98,121,],[-44,-44,-67,-68,80,-57,-63,-60,-61,-66,80,-67,-56,-62,-45,-67,]),'RPAREN':([28,42,49,50,51,52,53,54,62,84,87,88,89,90,94,95,96,97,98,107,109,110,117,125,127,],[-44,-67,-68,-46,-48,-57,-63,-60,88,-61,100,-66,-43,102,-47,-67,-56,-62,-45,115,118,119,126,134,135,]),'THEN':([28,42,49,50,51,52,53,54,67,84,88,89,94,95,96,97,98,],[-44,-67,-68,-46,-48,-57,-63,-60,91,-61,-66,-43,-47,-67,-56,-62,-45,]),'DO':([28,42,49,50,51,52,53,54,68,84,88,89,94,95,96,97,98,121,122,129,130,132,133,],[-44,-67,-68,-46,-48,-57,-63,-60,92,-61,-66,-43,-47,-67,-56,-62,-45,-67,131,136,137,139,140,]),'RBRACKET':([28,31,42,49,50,51,52,53,54,84,85,88,89,94,95,96,97,98,],[-44,58,-67,-68,-46,-48,-57,-63,-60,-61,98,-66,-43,-47,-67,-56,-62,-45,]),'ENDL':([101,116,117,],[109,125,127,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_start':([2,],[3,]),'program_sequence':([2,],[4,]),'main_declaration':([4,],[7,]),'declaration':([4,],[8,]),'procces_declaration':([4,],[10,]),'var_declaration':([4,24,26,91,92,112,131,136,137,139,140,],[11,38,38,38,38,38,38,38,38,38,38,]),'var_type':([4,24,26,91,92,112,131,136,137,139,140,],[13,13,13,13,13,13,13,13,13,13,13,]),'statements_nont':([19,20,],[24,26,]),'var':([22,24,26,41,46,47,48,57,61,63,64,70,71,81,91,92,93,101,103,112,114,123,124,131,136,137,139,140,],[30,42,42,42,42,42,69,42,87,42,90,95,95,95,42,42,42,108,110,42,121,132,133,42,42,42,42,42,]),'statement':([24,26,91,92,112,131,136,137,139,140,],[34,34,104,105,120,138,141,142,144,145,]),'expression_nont':([24,26,91,92,112,131,136,137,139,140,],[35,35,35,35,35,35,35,35,35,35,]),'condition_nont':([24,26,91,92,112,131,136,137,139,140,],[36,36,36,36,36,36,36,36,36,36,]),'iteration_nont':([24,26,91,92,112,131,136,137,139,140,],[37,37,37,37,37,37,37,37,37,37,]),'expression':([24,26,41,46,47,57,63,91,92,93,112,114,131,136,137,139,140,],[39,39,62,67,68,85,89,39,39,106,39,122,39,39,39,39,39,]),'simple_expression':([24,26,41,46,47,57,63,91,92,93,112,114,131,136,137,139,140,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'additive_expression':([24,26,41,46,47,57,63,70,91,92,93,112,114,131,136,137,139,140,],[51,51,51,51,51,51,51,94,51,51,51,51,51,51,51,51,51,51,]),'term':([24,26,41,46,47,57,63,70,71,91,92,93,112,114,131,136,137,139,140,],[52,52,52,52,52,52,52,52,96,52,52,52,52,52,52,52,52,52,52,]),'factor':([24,26,41,46,47,57,63,70,71,81,91,92,93,112,114,131,136,137,139,140,],[53,53,53,53,53,53,53,53,53,97,53,53,53,53,53,53,53,53,53,53,]),'call':([24,26,41,46,47,57,63,70,71,81,91,92,93,112,114,131,136,137,139,140,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'relop':([51,],[70,]),'addop':([51,94,],[71,71,]),'mulop':([52,96,],[81,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> START program_start END','program',3,'p_program','tinybit_yacc.py',17),
  ('program_start -> program_sequence main_declaration','program_start',2,'p_program_begin','tinybit_yacc.py',21),
  ('program_sequence -> program_sequence declaration','program_sequence',2,'p_program_sequence','tinybit_yacc.py',26),
  ('program_sequence -> empty','program_sequence',1,'p_declaration_empty','tinybit_yacc.py',30),
  ('declaration -> procces_declaration','declaration',1,'p_declaration','tinybit_yacc.py',33),
  ('declaration -> var_declaration','declaration',1,'p_declaration','tinybit_yacc.py',34),
  ('var_declaration -> var_type ID','var_declaration',2,'p_var_declaration','tinybit_yacc.py',39),
  ('var_declaration -> var_type ID COMMA ID','var_declaration',4,'p_var_declaration','tinybit_yacc.py',40),
  ('var_declaration -> var_type ID EQUAL NUMBER','var_declaration',4,'p_var_declaration','tinybit_yacc.py',41),
  ('var_declaration -> var_type ID EQUAL var','var_declaration',4,'p_var_declaration','tinybit_yacc.py',42),
  ('var_type -> INT','var_type',1,'p_var_type_INT','tinybit_yacc.py',48),
  ('var_type -> FLOAT','var_type',1,'p_var_type_FLOAT','tinybit_yacc.py',53),
  ('var_declaration -> var_type ID LBRACKET NUMBER RBRACKET','var_declaration',5,'p_var_declaration_array','tinybit_yacc.py',58),
  ('main_declaration -> MAIN ID COLON statements_nont END','main_declaration',5,'p_main_declaration','tinybit_yacc.py',62),
  ('procces_declaration -> PROCCES ID COLON statements_nont END','procces_declaration',5,'p_procces_declaration','tinybit_yacc.py',67),
  ('statements_nont -> statements_nont statement','statements_nont',2,'p_statements_nont','tinybit_yacc.py',72),
  ('statements_nont -> empty','statements_nont',1,'p_statements_empty','tinybit_yacc.py',76),
  ('statement -> expression_nont','statement',1,'p_statement','tinybit_yacc.py',80),
  ('statement -> condition_nont','statement',1,'p_statement','tinybit_yacc.py',81),
  ('statement -> iteration_nont','statement',1,'p_statement','tinybit_yacc.py',82),
  ('statement -> var_declaration','statement',1,'p_statement','tinybit_yacc.py',83),
  ('expression_nont -> expression','expression_nont',1,'p_expression_simple','tinybit_yacc.py',89),
  ('expression_nont -> SETOUT LPAREN QUOTES ID QUOTES RPAREN','expression_nont',6,'p_expression_SETOUT','tinybit_yacc.py',94),
  ('expression_nont -> SETOUT LPAREN QUOTES ID QUOTES COMMA ENDL RPAREN','expression_nont',8,'p_expression_SETOUT','tinybit_yacc.py',95),
  ('expression_nont -> SETOUT LPAREN var RPAREN','expression_nont',4,'p_expression_SETOUT','tinybit_yacc.py',96),
  ('expression_nont -> SETOUT LPAREN var COMMA ENDL RPAREN','expression_nont',6,'p_expression_SETOUT','tinybit_yacc.py',97),
  ('expression_nont -> SETOUT LPAREN var COMMA var COMMA RPAREN','expression_nont',7,'p_expression_SETOUT','tinybit_yacc.py',98),
  ('expression_nont -> SETOUT LPAREN var COMMA var COMMA ENDL RPAREN','expression_nont',8,'p_expression_SETOUT','tinybit_yacc.py',99),
  ('expression_nont -> GETIN LPAREN var RPAREN','expression_nont',4,'p_expression_GETIN','tinybit_yacc.py',105),
  ('expression_nont -> GETIN LPAREN var COMMA var RPAREN','expression_nont',6,'p_expression_GETIN','tinybit_yacc.py',106),
  ('expression_nont -> ID PLUSPLUS','expression_nont',2,'p_expression_overload','tinybit_yacc.py',112),
  ('expression_nont -> PLUSPLUS ID','expression_nont',2,'p_expression_overload','tinybit_yacc.py',113),
  ('expression_nont -> ID MINUSMINUS','expression_nont',2,'p_expression_overload','tinybit_yacc.py',114),
  ('expression_nont -> MINUSMINUS ID','expression_nont',2,'p_expression_overload','tinybit_yacc.py',115),
  ('condition_nont -> IF expression THEN statement END','condition_nont',5,'p_condition_if','tinybit_yacc.py',120),
  ('condition_nont -> IF expression THEN statement ELSE statement END','condition_nont',7,'p_condition_if_else','tinybit_yacc.py',125),
  ('iteration_nont -> WHILE expression DO statement LOOP','iteration_nont',5,'p_iteration_while','tinybit_yacc.py',130),
  ('iteration_nont -> FOR var COMMA expression COMMA expression DO statement LOOP','iteration_nont',9,'p_iteration_for','tinybit_yacc.py',135),
  ('iteration_nont -> FOR var COMMA expression COMMA var PLUSPLUS DO statement LOOP','iteration_nont',10,'p_iteration_for','tinybit_yacc.py',136),
  ('iteration_nont -> FOR var COMMA expression COMMA PLUSPLUS var DO statement LOOP','iteration_nont',10,'p_iteration_for','tinybit_yacc.py',137),
  ('iteration_nont -> FOR var COMMA expression COMMA var MINUSMINUS DO statement LOOP','iteration_nont',10,'p_iteration_for','tinybit_yacc.py',138),
  ('iteration_nont -> FOR var COMMA expression COMMA MINUSMINUS var DO statement LOOP','iteration_nont',10,'p_iteration_for','tinybit_yacc.py',139),
  ('expression -> var EQUAL expression','expression',3,'p_expression_equal','tinybit_yacc.py',145),
  ('var -> ID','var',1,'p_var_ID','tinybit_yacc.py',150),
  ('var -> ID LBRACKET expression RBRACKET','var',4,'p_var_bracket','tinybit_yacc.py',155),
  ('expression -> simple_expression','expression',1,'p_expression_2','tinybit_yacc.py',160),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression_1','tinybit_yacc.py',165),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression_2','tinybit_yacc.py',170),
  ('relop -> LESS','relop',1,'p_relop','tinybit_yacc.py',175),
  ('relop -> LESSEQUAL','relop',1,'p_relop','tinybit_yacc.py',176),
  ('relop -> GREATER','relop',1,'p_relop','tinybit_yacc.py',177),
  ('relop -> GREATEREQUAL','relop',1,'p_relop','tinybit_yacc.py',178),
  ('relop -> DEQUAL','relop',1,'p_relop','tinybit_yacc.py',179),
  ('relop -> DISTINT','relop',1,'p_relop','tinybit_yacc.py',180),
  ('relop -> QUOTES','relop',1,'p_relop','tinybit_yacc.py',181),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression_1','tinybit_yacc.py',187),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression_2','tinybit_yacc.py',192),
  ('addop -> PLUS','addop',1,'p_addop','tinybit_yacc.py',197),
  ('addop -> MINUS','addop',1,'p_addop','tinybit_yacc.py',198),
  ('factor -> call','factor',1,'p_factor_3','tinybit_yacc.py',203),
  ('call -> PROCCES ID','call',2,'p_call','tinybit_yacc.py',208),
  ('term -> term mulop factor','term',3,'p_term_1','tinybit_yacc.py',213),
  ('term -> factor','term',1,'p_term_2','tinybit_yacc.py',218),
  ('mulop -> TIMES','mulop',1,'p_mulop','tinybit_yacc.py',223),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','tinybit_yacc.py',224),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_1','tinybit_yacc.py',230),
  ('factor -> var','factor',1,'p_factor_2','tinybit_yacc.py',235),
  ('factor -> NUMBER','factor',1,'p_factor_4','tinybit_yacc.py',239),
]
